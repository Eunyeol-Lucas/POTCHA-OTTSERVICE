{"version":3,"sources":["components/ContentsItem.jsx","components/ContentsDetail.jsx","components/Prediction.jsx","components/Main.jsx","components/Movie.jsx","components/MyPage.jsx","components/NonSignIn.jsx","components/PredictionPotato.jsx","components/PotatoBasket.jsx","components/Signin.jsx","components/Signup.jsx","components/TV.jsx","components/Navigation.jsx","components/Footer.jsx","modules/popularity.js","containers/MainContainer.jsx","containers/PotatoBasketContainer.jsx","App.js","modules/index.js","index.js"],"names":["ContentsItem","youtube","title","url","thumbnails","ThumbnailBlock","className","href","target","rel","src","alt","styled","div","ContentsDetail","props","useState","youtubeData","setYoutubeData","useEffect","optionParams","q","part","key","type","maxResults","regionCode","encodeURI","option","substr","length","youtubeArray","axios","get","then","response","data","items","forEach","item","push","snippet","id","videoId","thumbnail","high","console","log","ContainerBlock","ContentsBlock","Prediction","prediction","Container","style","height","genres","Poster","bg","medium_cover_image","Similar","SimilarContainer","Main","popularList","predictableList","similarList","onPopular","onPredictable","onSimilar","a","movies","fetchData","backgroundImage","Header","StyledSlider","dots","infinite","speed","autoplay","autoplaySpeed","slidesToShow","centerMode","map","content","CardBox","CardImg","CardText","fontSize","color","background","Display","Order","Detail","Details","SimilarDetail","h1","Slider","img","p","Movie","ImageInput","input","disabled","css","Profile","image","onSubmit","onToggle","setOnToggle","onChange","htmlFor","Img","file","accept","display","onClick","MyPage","setImage","process","REACT_APP_BASE_URL","photolink","files","imageFile","Array","from","formData","FormData","append","patch","event","URL","createObjectURL","NonSignIn","class","to","PotatoBasket","potatoMovieList","potatoTvList","Basket","BasketTitle","Potatoes","PotatoAnalysis","Signin","email","setEmail","password","setPassword","history","useHistory","form","e","preventDefault","post","result","localStorage","setItem","JSON","stringify","access_token","refresh_token","alert","catch","placeholder","value","Signup","emailCheck","setEmailCheck","passwordVali","setPasswordVali","passwordCheck","setPasswordCheck","passwordError","setPasswordError","nickname","setNickname","nicknameCheck","setNicknameCheck","nicknameValidate","setNicknameValidate","onChangePasswordCheck","useCallback","name","required","test","TV","Navigation","userid","Menu","Footer","POPULAR","PREDICABLE","SIMILAR","popular","initialState","catchOn","state","action","connect","predictable","similar","App","exact","path","component","MainPopularity","PotatoBasketPopularity","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e108d12.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst ContentsItem = ({ youtube }) => { // tmdb 추가해야함\r\n    // const { }\r\n    const { title, url, thumbnails } = youtube;\r\n\r\n    return (\r\n        <div>\r\n            {/* <MainPosterBlock> */}\r\n                {/* 백에서 보내주는 포스터 이미지 값이 무엇인지??? */}\r\n                {/* <div className=\"mainPoster\">\r\n                    <img src={tmdb} />\r\n                </div>\r\n            </MainPosterBlock> */}\r\n            <ThumbnailBlock>\r\n                {thumbnails && (\r\n                    <div className=\"thumbnail\">\r\n                        <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                            <img src={thumbnails} alt=\"thumbnail\" />\r\n                        </a>\r\n                    </div>\r\n                )}\r\n                <div className=\"title\">\r\n                    <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                        <p>{title}</p>\r\n                    </a>\r\n                </div>\r\n            </ThumbnailBlock>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContentsItem;\r\n\r\nconst MainPosterBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  justify-content: space-around;\r\n  .mainPoster {\r\n      width: 600px;\r\n      height: 900px;\r\n      flex-direction: column;\r\n      justify-content: left;\r\n      object-fit: cover;\r\n  }\r\n`\r\n\r\nconst ThumbnailBlock = styled.div`\r\n  display: flex;\r\n  .thumbnail {\r\n    margin-right: 1rem;\r\n    img {\r\n      display: flex;\r\n      width: 360px;\r\n      height: 202px;\r\n      margin-right: 2rem;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  .title {\r\n    margin: 0.5rem;\r\n    p {\r\n      color: #fff;\r\n      font-size: 14px;\r\n      font-style: arial, sans-serif;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport ContentsItem from \"./ContentsItem\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ContentsDetail = (props) => {\r\n  const [ youtubeData, setYoutubeData ] = useState([]);\r\n  // const [ tmdbData, setTmdbData ] = useState()\r\n\r\n  useEffect(() => {\r\n    let optionParams = {\r\n      q: \"오징어 게임 리뷰\", // 검색 조건\r\n      part: \"snippet\", // 정보 출력 조건\r\n      key: \"AIzaSyCDp5_pK7F9waWSkTnaZvCCX_EY-Euq-lI\", // API KEY\r\n      type: \"video\", // youtube의 video 중에서 검색\r\n      maxResults: 3, // 상위 3개 출력\r\n      regionCode: \"KR\",\r\n    };\r\n    optionParams.q = encodeURI(optionParams.q);\r\n\r\n    let url = \"https://www.googleapis.com/youtube/v3/search?\";\r\n    for (var option in optionParams) {\r\n      url += option + \"=\" + optionParams[option] + \"&\";\r\n    }\r\n\r\n    url = url.substr(0, url.length - 1);\r\n\r\n    const youtubeArray = [];\r\n    axios.get(url).then((response) => {\r\n      response.data.items.forEach((item) => {\r\n        youtubeArray.push({\r\n          title: item.snippet.title,\r\n          url: \"https://www.youtube.com/watch?v=\" + item.id.videoId,\r\n          thumbnail: item.snippet.thumbnails.high.url,\r\n        });\r\n      });\r\n    });\r\n    setYoutubeData(...youtubeData, youtubeArray);\r\n  }, []);\r\n  console.log(youtubeData[1]);\r\n\r\n  // ▼ main에서 영화를 누르는지, tv를 누르는지에 따라 요청해야할 api가 달라야하지 않을까\r\n  // useEffect((props) => {\r\n  //   if ( props.movie ) {\r\n  //     axios\r\n  //       // ▼ detail 뒤에 category(movie, tv) 어떻게 전달할것인지 논의(임시 movie 고정)\r\n  //       .get(`${process.env.REACT_APP_BASE_URL}/detail/movie/`, `타이틀 정보`)\r\n  //       .then(response => setTmdbData(response.data.content))\r\n  //     }\r\n  //   if ( props.tv ) {\r\n  //     axios\r\n  //       .get(`${process.env.REACT_APP_BASE_URL}/detail/tv/`, `타이틀 정보`)\r\n  //       .then(response => setTmdbData(response.data.content))\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <ContainerBlock>\r\n      <div className=\"container\">\r\n        <ContentsBlock>\r\n          {/* <ContentsItem tmdb={tmdb ? {tmdbMovieData} : {tmdbTvData}} /> */}\r\n          <ContentsItem youtube={youtubeData} />\r\n          <ContentsItem youtube={youtubeData} />\r\n          <ContentsItem youtube={youtubeData} />\r\n        </ContentsBlock>\r\n      </div>\r\n    </ContainerBlock>\r\n  )\r\n};\r\n\r\nexport default ContentsDetail;\r\n\r\nconst ContentsBlock = styled.div`\r\n  box-sizing: border-box;\r\n  padding-right: 1.5rem;\r\n  width: 360px;\r\n  margin: 0 auto;\r\n  margin-top: 2rem;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100% auto;\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n  }\r\n`;\r\n\r\n// ▼ 전체 배경틀\r\nconst ContainerBlock = styled.div`\r\n  .container {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    background: \"\"; // 백에서 받아오는 포스터 이미지\r\n    background-size: cover;\r\n    /* z-index: 1; */\r\n  }\r\n  .container::before {\r\n    content: \"\";\r\n    opacity: 0.6;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n    bottom: 0px;\r\n    background-color: #000;\r\n  }\r\n  // ▼ 따로 박스를 만들어서 우측 유튜브 영상 위쪽으로 빼야할듯\r\n  .container h1 {\r\n    color: #fff;\r\n    text-align: center;\r\n    line-height: 300px;\r\n    position: relative;\r\n  }\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Prediction = ({ prediction }) => {\r\n  return (\r\n    <Container>\r\n      <h1 style={{ height: \"25px\" }}>{prediction.genres[0]}</h1>\r\n      <Poster bg={prediction.medium_cover_image} />\r\n      <h1>{prediction.title}</h1>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n\r\nexport const Similar = ({ prediction }) => {\r\n  return (\r\n    <SimilarContainer>\r\n      <h1 style={{ height: \"25px\" }}>{prediction.genres[0]}</h1>\r\n      <Poster bg={prediction.medium_cover_image} />\r\n      <h1>{prediction.title}</h1>\r\n    </SimilarContainer>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 300px;\r\n  width: 200px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 7px;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 80%;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-top-left-radius: 7px;\r\n  border-top-right-radius: 7px;\r\n`;\r\n\r\nconst SimilarContainer = styled.div`\r\n  height: 300px;\r\n  width: 200px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 7px;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;","import React, { useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport axios from \"axios\";\r\nimport Prediction, { Similar } from \"./Prediction\";\r\n\r\nconst Main = ({\r\n  popularList,\r\n  predictableList,\r\n  similarList,\r\n  onPopular,\r\n  onPredictable,\r\n  onSimilar,\r\n}) => {\r\n  // state를 redux로 관리하여 사용자 겸험을 상승\r\n  // 서버와 미연결로 인하여 현재 임시 데이터 api를 불러와서 렌더링 중\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://yts.mx/api/v2/list_movies.json?limit=10\"\r\n        );\r\n        onPopular(response.data.data.movies);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://yts.mx/api/v2/list_movies.json?minimum_rating=9&limit=5\"\r\n        );\r\n        onPredictable(response.data.data.movies);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://yts.mx/api/v2/list_movies.json?minimum_rating=5&limit=4\"\r\n        );\r\n        onSimilar(response.data.data.movies);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const settings = {\r\n    dots: true, // 슬라이드 밑에 점 보이게\r\n    infinite: true, // 무한으로 반복\r\n    speed: 500,\r\n    autoplay: true,\r\n    autoplaySpeed: 2000, // 넘어가는 속도\r\n    slidesToShow: 5, // 4장씩 보이게\r\n    // slidesToScroll: 5, // 1장씩 뒤로 넘어가게\r\n    centerMode: true,\r\n    // centerPadding: \"0px\", // 0px 하면 슬라이드 끝쪽 이미지가 안잘림\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          backgroundImage: \"linear-gradient(-45deg, #d754ab, #fd723a)\",\r\n          height: \"650px\",\r\n        }}\r\n      >\r\n        <Header>인기 컨텐츠 Top 10</Header>\r\n        {!popularList ? (\r\n          <h1 style={{ fontSize: \"30px\", color: \"black\" }}>Loading ...</h1>\r\n        ) : (\r\n          <StyledSlider {...settings}>\r\n            {popularList.map((content) => (\r\n              <CardBox key={content.id}>\r\n                <CardImg alt=\"인기 컨텐츠\" src={content.medium_cover_image} />\r\n                <CardText>{content.title}</CardText>\r\n              </CardBox>\r\n            ))}\r\n          </StyledSlider>\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          backgroundImage: \"linear-gradient(45deg,#fd723a, #d754ab )\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <h1>영화 흥행 예측작품</h1>\r\n        <div style={{ height: \"400px\", background: \"white\" }}>Graph</div>\r\n        <Display>\r\n          <Order>\r\n            <h1>1</h1>\r\n            <h1>2</h1>\r\n            <h1>3</h1>\r\n            <h1>4</h1>\r\n            <h1>5</h1>\r\n          </Order>\r\n          <Detail>\r\n            <h1>흥행 예측 작품</h1>\r\n            {!predictableList ? (\r\n              <h1 style={{ fontSize: \"30px\", color: \"black\" }}>Loading ...</h1>\r\n            ) : (\r\n              predictableList.map((prediction) => (\r\n                <Prediction key={prediction.id} prediction={prediction} />\r\n              ))\r\n            )}\r\n          </Detail>\r\n\r\n          <Details>\r\n            <h1>흥행 예측 작품의 코로나 이전 유사 작품들\u001d </h1>\r\n            {/* 데이터 전달받고 나서 for 문을 통해 배열내 배열을 전달하는 방식을 사용하면 될 것으로 예상 */}\r\n            <SimilarDetail>\r\n              {!similarList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                similarList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n            <SimilarDetail>\r\n              {!similarList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                similarList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n            <SimilarDetail>\r\n              {!similarList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                similarList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n            <SimilarDetail>\r\n              {!similarList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                similarList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n            <SimilarDetail>\r\n              {!similarList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                similarList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n          </Details>\r\n        </Display>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst Header = styled.h1`\r\n  margin-left: 25px;\r\n  position: absolute;\r\n  top: 200px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  .slick-list {\r\n    max-width: 1600px;\r\n    top: 200px;\r\n    margin: 0 auto;\r\n    height: 350px;\r\n  }\r\n  // 일단 아무런 효과 없는 것을 추정됨\r\n  /* .slick-slide {\r\n    height: auto; // ← that must not be ignored\r\n  }\r\n  .slick-track {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-items: stretch;\r\n  } */\r\n\r\n  .slick-slide div {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .slick-dots {\r\n    bottom: -220px;\r\n  }\r\n`;\r\n\r\nconst CardBox = styled.div`\r\n  cursor: pointer;\r\n  width: 200px;\r\n`;\r\n\r\nconst CardImg = styled.img`\r\n  width: 150px;\r\n  height: 220px;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-top-left-radius: 7px;\r\n  border-top-right-radius: 7px;\r\n\r\n  @media (max-width: 850px) {\r\n    width: 100px;\r\n    height: 150px;\r\n  }\r\n`;\r\n\r\nconst CardText = styled.p`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  font-size: 12px;\r\n  font-weight: bolder;\r\n  align-items: center;\r\n  height: 70px;\r\n  width: 150px;\r\n  background: white;\r\n  border-bottom-left-radius: 7px;\r\n  border-bottom-right-radius: 7px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n\r\n  @media (max-width: 850px) {\r\n    font-size: 10px;\r\n    width: 100px;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nconst Display = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\nconst Order = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  margin: 30px 0;\r\n  width: 100px;\r\n  font-size: 40px;\r\n`;\r\n\r\nconst Detail = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  margin: 30px 0;\r\n  width: 300px;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  margin: 30px 0;\r\n`;\r\n\r\nconst SimilarDetail = styled.div`\r\n  display: flex;\r\n`;\r\n","import React from 'react';\r\n\r\nconst Movie = () => {\r\n    return (\r\n        <div>\r\n            Movie\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { BsPencilFill, BsSaveFill } from \"react-icons/bs\";\r\n\r\nconst ImageInput = styled.input`\r\n  ${(props) => {\r\n    if (props.disabled) {\r\n      return css`\r\n        cursor: pointer;\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\n// 임시 이미지 url\r\nconst defaultImage =\r\n  \"https://kdt-gitlab.elice.io/002-part3-ottservice/team5/sample-project/-/raw/develop/backend/static/image/default.png\";\r\nconst Profile = ({ image, onSubmit, onToggle, setOnToggle, onChange }) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        <label className=\"input-file-button\" htmlFor=\"input-file\">\r\n          <Img src={image.file} alt=\"#\" />\r\n        </label>\r\n        <ImageInput\r\n          id=\"input-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onChange}\r\n          style={{ display: \"none\" }}\r\n          disabled={onToggle}\r\n        />\r\n      </p>\r\n      {onToggle ? (\r\n        <button onClick={() => setOnToggle(!onToggle)}>\r\n          <BsPencilFill />\r\n        </button>\r\n      ) : (\r\n        <button\r\n          onClick={() => {\r\n            setOnToggle(!onToggle);\r\n            onSubmit();\r\n          }}\r\n        >\r\n          <BsSaveFill />{\" \"}\r\n        </button>\r\n      )}\r\n      <h3>nickname</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MyPage = () => {\r\n  const [onToggle, setOnToggle] = useState(false);\r\n  const [image, setImage] = useState({ file: defaultImage });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_BASE_URL}/api/mypage`\r\n        );\r\n        setImage({\r\n          file: `${process.env.REACT_APP_BASE_URL}/${response.data.photolink}`,\r\n        });\r\n      } catch (err) {\r\n        console.log(err.response);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [image]);\r\n\r\n  // 변경할 이미지를 선택할 경우 임시 이미지 URL을 생성하여, 일시적으로 프포필 사진을 변경함\r\n  const onChange = (event) => {\r\n    setImage({\r\n      file: URL.createObjectURL(event.target.files[0]),\r\n      files: event.target.files,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    if (image.files) {\r\n      const imageFile = Array.from(image.files);\r\n      const formData = new FormData();\r\n      formData.append(\"file\", imageFile[0]);\r\n      try {\r\n        const response = await axios.patch(\r\n          `${process.env.REACT_APP_BASE_URL}/api/mypage/user`,\r\n          formData\r\n          // { headers: authHeader() }\r\n        );\r\n        console.log(response);\r\n      } catch (error) {\r\n        console.log(error.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <Container>\r\n        <Profile\r\n          image={image}\r\n          onSubmit={onSubmit}\r\n          onToggle={onToggle}\r\n          setOnToggle={setOnToggle}\r\n          onChange={onChange}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n\r\nconst Container = styled.div`\r\n  position: sticky;\r\n  margin: 0;\r\n  top: 150px;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  background-color: white;\r\n  margin: 0 auto 0;\r\n  width: 250px;\r\n  height: 350px;\r\n  border-radius: 15px;\r\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\r\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 125px;\r\n  height: 125px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background-color: #f2f2f2;\r\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\r\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NonSignIn.scss\";\r\n\r\nconst NonSignIn = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <span>POTCHA</span>\r\n      </h1>\r\n      <div class=\"outer-scratch\">\r\n        <div class=\"inner-scratch\">\r\n          <div class=\"background grain\"></div>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/signin\">\r\n        <button> 로그인 </button>\r\n      </Link>\r\n      <Link to=\"/signup\">\r\n        <button> 회원가입 </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NonSignIn;\r\n","// 테스트용, 나중에 삭제 예정\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PredictionPotato = ({ prediction }) => {\r\n  return (\r\n    <Container>\r\n      <h1 style={{ height: \"25px\" }}>{prediction.genres[0]}</h1>\r\n      <Poster bg={prediction.medium_cover_image} />\r\n      <h1>{prediction.title}</h1>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PredictionPotato;\r\n\r\nexport const Similar = ({ prediction }) => {\r\n  return (\r\n    <SimilarContainer>\r\n      <h1 style={{ height: \"25px\" }}>{prediction.genres[0]}</h1>\r\n      <Poster bg={prediction.medium_cover_image} />\r\n      <h1>{prediction.title}</h1>\r\n    </SimilarContainer>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 300px;\r\n  width: 200px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 7px;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 80%;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-top-left-radius: 7px;\r\n  border-top-right-radius: 7px;\r\n`;\r\n\r\nconst SimilarContainer = styled.div`\r\n  height: 300px;\r\n  width: 200px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 7px;\r\n  background: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport Prediction, { Similar } from \"./PredictionPotato\";\r\n\r\nconst PotatoBasket = ({\r\n  potatoMovieList,\r\n  potatoTvList,\r\n  popularList,\r\n  onPopular,\r\n}) => {\r\n  // 은열님의 외부 api 받아오는 코드 사용\r\n  // 추후 potato movie list와 potato tv list로 각각 받아올 예정\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://yts.mx/api/v2/list_movies.json?limit=4\"\r\n        );\r\n        onPopular(response.data.data.movies);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Basket>\r\n          <BasketTitle>영화 감자 바구니</BasketTitle>\r\n          <Potatoes>\r\n            <SimilarDetail>\r\n              {!popularList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                popularList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n          </Potatoes>\r\n        </Basket>\r\n        <PotatoAnalysis>영화 찐 감자 분석</PotatoAnalysis>\r\n      </Container>\r\n      <Container>\r\n        <Basket>\r\n          <BasketTitle>TV 감자 바구니</BasketTitle>\r\n          <Potatoes>\r\n            <SimilarDetail>\r\n              {!popularList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                popularList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n            <SimilarDetail>\r\n              {!popularList ? (\r\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\r\n                  Loading ...\r\n                </h1>\r\n              ) : (\r\n                popularList?.map((prediction) => (\r\n                  <Similar key={prediction.id} prediction={prediction} />\r\n                ))\r\n              )}\r\n            </SimilarDetail>\r\n          </Potatoes>\r\n        </Basket>\r\n        <PotatoAnalysis>TV 찐 감자 분석</PotatoAnalysis>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PotatoBasket;\r\n\r\n// styled components\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  margin: 3rem;\r\n`;\r\n\r\nconst Basket = styled.div`\r\n  width: 800px;\r\n  background-color: orange;\r\n`;\r\n\r\nconst BasketTitle = styled.p`\r\n  font-size: x-large;\r\n  font-weight: bold;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Potatoes = styled.div`\r\n  height: 500px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst PotatoAnalysis = styled.div`\r\n  width: 500px;\r\n  background-color: gainsboro;\r\n`;\r\n\r\nconst SimilarDetail = styled.div`\r\n  display: flex;\r\n`;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst Signin = () => {\r\n  const [ email, setEmail ] = useState(\"\");\r\n  const [ password, setPassword ] = useState(\"\");\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\") {\r\n      alert(\"아이디 또는 비밀번호를 입력해주세요\")\r\n      return;\r\n    };\r\n\r\n    if (!email && !password) return;\r\n\r\n    const data = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(`http://localhost:5000/login`, data)\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.data.result === \"success\") {\r\n          console.log(\"access_token\", response.data);\r\n          localStorage.setItem(\r\n            \"access_token\", \r\n            JSON.stringify(response.data.access_token, response.data.refresh_token)\r\n          );\r\n          history.push(\"/main\");\r\n          alert(\"로그인에 성공하였습니다.\");\r\n        }\r\n      }).catch(e => {\r\n        console.log(e.response);\r\n        alert(\"아이디 또는 비밀번호를 확인하세요\");\r\n      })\r\n    };\r\n\r\n  return (\r\n    <div>\r\n    <form form onSubmit={handleSubmit}>\r\n        <div>\r\n        <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        </div>\r\n        <div>\r\n        <input\r\n            placeholder=\"Password\"\r\n            type=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        </div>\r\n        <button type=\"submit\"> 로그인 </button> <br /><br />\r\n        <label>아직 POTCHA의 회원이 아니신가요? </label>\r\n        <Link to=\"/signup\">\r\n            <button> 회원가입 </button>\r\n        </Link>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;","import React, { useState, useCallback } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Signup = () => {\r\n  const [ email, setEmail ] = useState(\"\");\r\n  const [ emailCheck, setEmailCheck ] = useState(true);\r\n\r\n  const [ password, setPassword ] = useState(\"\");\r\n  const [ passwordVali, setPasswordVali ] = useState(true);\r\n\r\n  const [ passwordCheck, setPasswordCheck ] = useState(\"\");\r\n  const [ passwordError, setPasswordError ] = useState(false);\r\n\r\n  const [ nickname, setNickname ] = useState(\"\");\r\n  const [ nicknameCheck, setNicknameCheck ] = useState(true);\r\n  const [ nicknameValidate, setNicknameValidate ] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordError(e.target.value !== password);\r\n      setPasswordCheck(e.target.value);\r\n    }, [passwordCheck]);\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    const checkEmail = (value) => {\r\n      const regExp =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n      return regExp.test(value);\r\n    };\r\n    !checkEmail(e.target.value) ? setEmailCheck(false) : setEmailCheck(true);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n    const checkPassword = (value) => {\r\n      const regExp = /^.*(?=.{10,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/;\r\n      return regExp.test(value);\r\n    };\r\n    !checkPassword(e.target.value)\r\n      ? setPasswordVali(false)\r\n      : setPasswordVali(true);\r\n  };\r\n\r\n  const onChangeNickname = (e) => {\r\n    setNickname(e.target.value);\r\n    const checkNickname = (value) => {\r\n      const regExp = /^[a-zA-Zㄱ-힣0-9]*$/;\r\n      return regExp.test(value);\r\n    };\r\n    !checkNickname(e.target.value)\r\n      ? setNicknameCheck(false)\r\n      : setNicknameCheck(true);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!emailCheck) return;\r\n\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true);\r\n    }\r\n    if (!nicknameCheck) return;\r\n\r\n    const data = {\r\n      email: email,\r\n      password: password,\r\n      nickname: nickname,\r\n    };\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(`http://localhost:5000/signup`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.result === \"fail\") {\r\n          setNicknameValidate(false)\r\n        } else\r\n          {alert(\"회원 가입에 성공하셨습니다.\");\r\n        history.push('/signin');}\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <input\r\n            name=\"Email\"\r\n            value={email}\r\n            required\r\n            onChange={onChangeEmail}\r\n            placeholder=\"Email\"\r\n          />\r\n          {!emailCheck && (\r\n            <div style={{ color: \"red\", fontSize: 12 }}>이메일 형식이 유효하지 않습니다.</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            name=\"Password\"\r\n            type=\"Password\"\r\n            value={password}\r\n            required\r\n            onChange={onChangePassword}\r\n            placeholder=\"Password\"\r\n          />\r\n          {!passwordVali && (\r\n            <div style={{ color: \"red\", fontSize: 12 }}>\r\n              대·소·특수문자, 숫자 최소 2개 이상 포함, 최소 10자리를 입력해주세요\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            name=\"Password-check\"\r\n            type=\"Password\"\r\n            value={passwordCheck}\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n          {passwordError && (\r\n            <div style={{ color: \"red\", fontSize: 12 }}>비밀번호가 일치하지 않습니다.</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            name=\"Nickname\"\r\n            value={nickname}\r\n            required\r\n            onChange={onChangeNickname}\r\n            placeholder=\"Nickname\"\r\n          />\r\n          {!nicknameCheck && (\r\n            <div style={{ color: \"red\", fontSize: 12 }}>\r\n              한글, 대·소문자, 숫자만 입력해주세요\r\n            </div>\r\n          )}\r\n          {!nicknameValidate && (\r\n            <div style={{ color: \"red\", fontSize: 12 }}>중복된 이메일이 존재합니다.</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\"> 확인 </button>      \r\n            <Link to=\"/signin\">\r\n                <p>이미 가입하신 회원이시라면 로그인을 진행해보세요</p>\r\n            </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nconst TV = () => {\r\n    return (\r\n        <div>\r\n            TV\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TV;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Navigation = ({ userid }) => {\r\n  return (\r\n    <Container>\r\n      <Link to=\"/main\">POTCHA</Link>\r\n      <Menu>\r\n        <Link to={`/movie`}>Movie</Link>\r\n        <Link to={`/tv`}>TV</Link>\r\n        <Link to={`/potato-basket/${userid}`}>PotatoBasket</Link>\r\n      </Menu>\r\n      <Link to=\"/mypage\">MyPage</Link>\r\n      <button>Logout</button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  height: 40px;\r\n  border-bottom: 2px solid black;\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 25%;\r\n`;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div style={{height: \"200px\", background:\"yellow\"}}>\r\n            POTCHA\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","const POPULAR = \"popularity/POPULAR\";\r\nconst PREDICABLE = \"popularity/PREDICABLE\";\r\nconst SIMILAR = \"popularity/SIMILAR\";\r\n\r\nexport const popular = (popularList) => ({ type: POPULAR, popularList });\r\nexport const predictable = (predictableList) => ({\r\n  type: PREDICABLE,\r\n  predictableList,\r\n});\r\nexport const similar = (similarList) => ({ type: SIMILAR, similarList });\r\n\r\nconst initialState = {\r\n  popularList: \"\",\r\n  predictableList: \"\",\r\n  similarList: \"\",\r\n};\r\n\r\nfunction catchOn(state = initialState, action) {\r\n  switch (action.type) {\r\n    case POPULAR:\r\n      return {\r\n        ...state,\r\n        popularList: action.popularList,\r\n      };\r\n    case PREDICABLE:\r\n      return {\r\n        ...state,\r\n        predictableList: action.predictableList,\r\n      };\r\n    case SIMILAR:\r\n      return {\r\n        ...state,\r\n        similarList: action.similarList,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default catchOn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Main from \"../components/Main\";\r\nimport { popular, predictable, similar } from \"../modules/popularity\";\r\n\r\nconst MainPopularity = ({\r\n  popularList,\r\n  predictableList,\r\n  similarList,\r\n  popular,\r\n  predictable,\r\n  similar,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Main\r\n        popularList={popularList}\r\n        predictableList={predictableList}\r\n        similarList={similarList}\r\n        onPopular={popular}\r\n        onPredictable={predictable}\r\n        onSimilar={similar}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ catchOn }) => ({\r\n    popularList: catchOn.popularList,\r\n    predictableList: catchOn.predictableList,\r\n    similarList: catchOn.similarList,\r\n  }),\r\n  { popular, predictable, similar }\r\n)(MainPopularity);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PotatoBasket from \"../components/PotatoBasket\";\r\nimport { popular } from \"../modules/popularity\";\r\n\r\nconst PotatoBasketPopularity = ({ popularList, popular }) => {\r\n  return (\r\n    <div>\r\n      <PotatoBasket popularList={popularList} onPopular={popular} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ catchOn }) => ({\r\n    popularList: catchOn.popularList,\r\n  }),\r\n  { popular }\r\n)(PotatoBasketPopularity);\r\n","import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport ContentsDetail from './components/ContentsDetail';\r\nimport Main from './components/Main';\r\nimport Movie from './components/Movie';\r\nimport MyPage from './components/MyPage';\r\nimport NonSignIn from './components/NonSignIn';\r\nimport PotatoBasket from './components/PotatoBasket';\r\nimport Signin from './components/Signin';\r\nimport Signup from './components/Signup';\r\nimport TV from './components/TV';\r\nimport Navigation from './components/Navigation';\r\nimport Footer from './components/Footer';\r\nimport MainPopularity from './containers/MainContainer';\r\nimport PotatoBasketPopularity from './containers/PotatoBasketContainer';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navigation />\r\n      </div>\r\n      <Route exact path=\"/\" component={NonSignIn} />\r\n      <Route path=\"/signin\" component={Signin} />\r\n      <Route path=\"/signup\" component={Signup} />\r\n      <Route path=\"/main\" component={MainPopularity} />\r\n      {/* <Route path=\"/main\" component={Main} /> */}\r\n      <Route path=\"/contents-detail/:id?\" component={ContentsDetail} />\r\n      <Route path=\"/movie\" component={Movie} />\r\n      <Route path=\"/tv\" component={TV} />\r\n      {/* <Route path=\"/potato-basket/:id?\" component={PotatoBasket} /> */}\r\n      <Route path=\"/potato-basket/:id?\" component={PotatoBasketPopularity} />\r\n      <Route path=\"/mypage\" component={MyPage} />\r\n      <div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport catchOn from \"./popularity\";\r\n\r\nconst rootReducer = combineReducers({\r\n  catchOn,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./modules\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}