{"version":3,"sources":["authorization/tokenHeader.js","components/ContentsDetail.jsx","components/NonSigninNavigation.jsx","components/OttServiceRateChart.jsx","components/OttServiceRateData.js","components/MovieCustomerRateChart.jsx","components/MovieCustomerRateData.js","components/NetfilxOriginalMovieChart.jsx","components/NetfilxOriginalMovieData.js","components/NonSignIn.jsx","components/Signin.jsx","components/Signup.jsx","components/Navigation.jsx","components/Footer.jsx","components/PosterAndTitle.jsx","components/WordCloudComponent.jsx","components/WordCloudDataExample.js","components/PotatoBasket.jsx","modules/potatoes.js","containers/PotatoBasketContainer.jsx","components/Prediction.jsx","components/Tab.jsx","components/GraphComponent.jsx","components/GraphData.js","components/Main.jsx","apis/api.js","modules/popularity.js","containers/MainContainer.jsx","components/Modal.js","components/MyPage.jsx","modules/mypage.js","containers/MyPageContainer.jsx","helpers/PrivateRoute.js","helpers/PublicRoute.js","components/Filtering.jsx","components/Categorizing.jsx","components/ContentsCategory.jsx","components/Search.jsx","App.js","modules/index.js","index.js"],"names":["tokenHeader","accessToken","JSON","parse","localStorage","getItem","Authorization","ContentsDetail","useState","contentsInfo","setContentsInfo","youtubeList","setYoutubeList","like","setLike","params","useParams","fetchData","a","axios","get","category","id","headers","response","data","content","is_like","console","log","useEffect","optionParams","q","title","part","type","maxResults","regionCode","encodeURI","url","option","substr","length","youtubeArray","then","items","forEach","item","push","snippet","videoId","thumbnail","thumbnails","high","requestAPI","onClick","body","likes","patch","style","height","background","contents","map","youtube","Detail","src","poster_path","alt","like_count","cursor","overview","release_date","runtime","genres","idx","director","cast","slice","positive_comment","comment","color","negative_comment","YoutubeContents","width","frameborder","allow","allowfullscreen","NonSigninNavigation","pathname","useLocation","display","className","ContainerBox","Container","GridContainer","StyledLink","to","isActive","BackgroundSquare","position","zIndex","backgroundColor","borderRadius","styled","div","Link","props","OttServiceRateChart","keys","indexBy","margin","top","right","bottom","left","padding","layout","valueScale","indexScale","round","colors","scheme","defs","rotation","lineWidth","spacing","theme","labels","text","fontFamily","fontSize","axis","ticks","legends","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","role","ariaLabel","barAriaLabel","e","formattedValue","indexValue","OttServiceRateData","country","Youtube","YoutubeColor","Netflix","NetflixColor","Facebook","FacebookColor","NaverTv","NaverTvColor","AfricaTv","AfricaTvColor","MovieCustomerRateChart","ChartComponent","ComposedChart","CartesianGrid","stroke","XAxis","dataKey","label","value","offset","scale","Tooltip","y","Legend","Bar","barSize","Line","MovieCustomerRateData","name","chartColors","NetflixOriginalMovieChart","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","size","stagger","itemTextColor","symbolShape","NetflixOriginalMovieData","NonSignIn","NonSigninNavigationContainer","scrollOverflow","loopBottom","render","state","fullpageApi","FullPage","Title","Button","h3","button","Signin","windowHeight","email","setEmail","password","setPassword","history","useHistory","minHeight","form","onSubmit","preventDefault","post","result","setItem","stringify","access_token","nickname","photolink","alert","catch","error","placeholder","required","onChange","target","Signup","emailCheck","setEmailCheck","passwordVali","setPasswordVali","passwordCheck","setPasswordCheck","passwordError","setPasswordError","setNickname","nicknameCheck","setNicknameCheck","nicknameValidate","setNicknameValidate","onChangePasswordCheck","useCallback","test","Navigation","userid","logout","search","setSearch","Menu","transform","StyledSearch","SearchTextField","CustomButton","boxShadow","children","debouncedOnChange","func","timeout","timer","args","clearTimeout","setTimeout","apply","debounce","InputContainer","SearchButton","Icon","for","InputField","autocomplete","GoSearch","input","Potcha_info","Footer","marginRight","textAlign","fontWeight","href","PosterAndTitle","prediction","Poster","bg","resizeStyle","alignItems","justifyContent","options","enableTooltip","deterministic","fontSizes","fontStyle","rotations","rotationAngles","spiral","transitionDuration","WordCloudComponent","words","defaultSize","WordCloudDataExample","PotatoBasket","moviePotatoList","tvPotatoList","onMoviePotatoes","onTvPotatoes","potatoData","movie","tv","movieAnalysis","tvAnalysis","Basket","BasketTitle","Potatoes","ListDetail","PotatoAnalysis","p","MOVIE","TV","initialState","catchPotato","action","connect","moviePotatoes","tvPotatoes","Prediction","PredictPoster","PredictTitle","Recommend","RecommendPoster","RecommendTitle","PredictionOrder","List","currTab","PredictContainer","list","gridTemplateColumns","alignContent","ContentsCard","h2","EactTab","active","css","tabs","Tab","tab","i","MyResponsivePie","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","enableArcLabels","movieGenres","movieCountry","movieKeyword","tvGenres","tvCountry","tvKeyword","Main","popularList","predictableList","onPopular","onPredictable","setCurrTab","setHeight","predictRef","useRef","subject","toLowerCase","topRated","hitContents","requestContents","current","clientHeight","distribution","order","TopTen","TopTenTitle","StyledSlider","dots","infinite","speed","autoplay","autoplaySpeed","slidesToShow","centerMode","centerPadding","CardBox","CardImg","CardText","marginTop","PredictionContainer","ref","PredictionTitle","PredictChart","PredictSeparate","PredictChartTitle","Recommendation","marginBottom","borderBottom","h1","Slider","img","POPULAR","PREDICABLE","SIMILAR","similarList","catchOn","popular","predictable","similar","onSimilar","Modal","setQuit","deleteConfirm","delete","window","clear","confirmDelete","message","onConfirm","onCancel","confirmAction","confirm","Profile","user","onToggle","setOnToggle","htmlFor","Img","image","file","disabled","accept","FriendProfile","friend","ProfileContainer","process","REACT_APP_BASE_URL","MyPage","friendList","onUserProfile","onRequestFriends","friendNickname","setFriendNickname","existence","setExistence","setFriend","quit","recommendList","setRecommendList","fetchFriend","recommend","files","imageFile","Array","formData","FormData","append","onNicknameSubmit","handleOk","showBanner","event","URL","createObjectURL","maxWidth","shape","USERPROFILE","REQUESTFRIENDS","RECOMMEND","inform","userProfile","requestFriends","onRecommend","PrivateRoute","Component","component","rest","location","PublicRoute","Filtering","filtering","as","rightIcon","menuButtonStyle","menuListStyle","element","menuItemStyle","Subtitle","border","Categorizing","categorizing","MovieCategoriesList","TVCategoriesList","ContentsCategory","contentsList","setContentsList","setFiltering","setCategorizing","split","fetchFilter","sort_criteria","chooseCategoryData","array","includes","CategoryContainer","Filter","ThemeProvider","paddingRight","renderThumbVertical","FilteredList","FilterBackgroundSquare","ListBackgroundSquare","Search","searchList","setSearchList","query","search_word","App","loggedOut","setLoggedOut","windowSize","undefined","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","backgroundImage","totalStyled","stickyNavigation","exact","path","MainContainer","MyPageContainer","NonPage","NonPageComment","textDecoration","rootReducer","combineReducers","store","createStore","composeWithDevTools","defaults","baseURL","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.25b5a7ea.chunk.js","sourcesContent":["export default function tokenHeader() {\n  const accessToken = JSON.parse(localStorage.getItem(\"access_token\"));\n  if (accessToken) {\n    return { Authorization: \"Bearer \" + accessToken };\n  } else return {};\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport tokenHeader from \"../authorization/tokenHeader\";\n\nconst ContentsDetail = () => {\n  const [contentsInfo, setContentsInfo] = useState(\"\");\n  const [youtubeList, setYoutubeList] = useState([]);\n  const [like, setLike] = useState(false);\n\n  const params = useParams();\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\n        `/api/detail/${params.category}/${params.id}`,\n        {\n          headers: tokenHeader(),\n        }\n      );\n      setContentsInfo(response.data.content);\n      setLike(response.data.is_like);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n  const requestAPI = () => {\n      const optionParams = {\n        q: `${params.title} 리뷰`, // 검색 조건 (여기에 백엔드에서 전달해주는 영화 title 정보 + [리뷰, 해석 등]이 붙어서 검색)\n        part: \"snippet\", // 정보 출력 조건\n        // key: process.env.REACT_APP_YOUTUBE_API_KEY, // API KEY (각자 API KEY로)\n        type: \"video\", // youtube의 video 중에서 검색\n        maxResults: 3, // 상위 1개 출력\n        regionCode: \"KR\",\n      };\n      optionParams.q = encodeURI(optionParams.q);\n\n      let url = \"https://www.googleapis.com/youtube/v3/search?\";\n      for (let option in optionParams) {\n        url += option + \"=\" + optionParams[option] + \"&\";\n      }\n\n      url = url.substr(0, url.length - 1);\n\n      const youtubeArray = [];\n      axios.get(url).then((response) => {\n        response.data.items.forEach((item) => {\n          youtubeArray.push({\n            title: item.snippet.title,\n            url: \"https://www.youtube.com/watch?v=\" + item.id.videoId,\n            thumbnail: item.snippet.thumbnails.high.url,\n            id: item.id.videoId,\n          });\n        });\n        setYoutubeList(...youtubeList, youtubeArray);\n        console.log(response.data);\n      });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [like]);\n\n  useEffect(() => {\n    requestAPI();\n  }, []);\n\n\n\n  const onClick = async () => {\n    setLike(!like);\n    const body = {\n      id: params.id,\n      category: params.category,\n      likes: !like,\n    };\n    await axios.patch(`/api/like`, body, {\n      headers: tokenHeader(),\n    });\n  };\n\n  return (\n    <div style={{ height: \"500px\", background: \"pink\" }}>\n      {!contentsInfo ? (\n        <div>Loading ... </div>\n      ) : (\n        <Detail\n          key={contentsInfo.id}\n          contents={contentsInfo}\n          onClick={onClick}\n          like={like}\n        />\n      )}\n      {youtubeList == [] ? (\n        <h1>Loading...</h1>\n      ) : (\n        youtubeList.map((youtube) => (\n          <YoutubeContents key={youtube.url} youtube={youtube} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ContentsDetail;\n\nexport const Detail = ({ contents, onClick, like }) => {\n  return (\n    <div>\n      <img src={`${contents.poster_path}`} alt=\"poster\" />\n      <h1>제목: {contents.title}</h1>\n      <p>찐 감자: {contents.like_count}</p>\n      <button onClick={onClick} style={{ cursor: \"pointer\" }}>\n        {!like ? \"🥔\" : \"🍟\"}\n      </button>\n      <p>줄거리: {contents.overview}</p>\n      <p>개봉일: {contents.release_date}</p>\n      <p>상영 시간: {contents.runtime} 분</p>\n      <p>\n        장르:\n        {contents.genres?.map((genres, idx) => (\n          <span key={idx}>{genres} </span>\n        ))}\n      </p>\n      <p>감독: {contents.director}</p>\n      <p>\n        주연:\n        {contents.cast?.slice(0, 4).map((cast, idx) => (\n          <span key={idx}>#{cast} </span>\n        ))}\n      </p>\n      <p>\n        {contents.positive_comment[0] === \"NaN\" ? (\n          <span></span>\n        ) : (\n          contents.positive_comment?.map((comment, idx) => (\n            <span key={idx} style={{ color: \"blue\" }}>\n              #{comment}{\" \"}\n            </span>\n          ))\n        )}\n      </p>\n      <p>\n        {contents.negative_comment[0] === \"NaN\" ? (\n          <span></span>\n        ) : (\n          contents.negative_comment?.map((comment, idx) => (\n            <span key={idx} style={{ color: \"red\" }}>\n              #{comment}{\" \"}\n            </span>\n          ))\n        )}\n      </p>\n    </div>\n  );\n};\n\nexport const YoutubeContents = ({ youtube }) => {\n  return (\n    <div>\n      <iframe\n        width=\"200\"\n        height=\"150\"\n        src={`https://www.youtube.com/embed/${youtube.id}`}\n        title=\"YouTube video player\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>\n    </div>\n  );\n};\n","// react-fullpage에서 header에 적용할 navigation bar\n\nimport React from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"../styles/FontStyle.css\";\n\nconst NonSigninNavigation = () => {\n  const { pathname } = useLocation();\n  return (\n    <div style={{ display: \"inline-block\" }} className=\"ContainerPosition\">\n      <ContainerBox>\n        <BackgroundSquare />\n        <Container>\n          <GridContainer>\n            <StyledLink to=\"/\" isActive={pathname === \"/\"} className=\"potcha\">\n              POTCHA\n            </StyledLink>\n            <StyledLink\n              to=\"/signin\"\n              isActive={pathname === \"/signin\"}\n              className=\"login\"\n            >\n              Login\n            </StyledLink>\n          </GridContainer>\n        </Container>\n      </ContainerBox>\n    </div>\n  );\n};\n\nexport default NonSigninNavigation;\n\nconst BackgroundSquare = () => {\n  const style = {\n    position: \"absolute\",\n    zIndex: \"25\",\n    width: \"1300px\",\n    height: \"60px\",\n    backgroundColor: \"#f7f0ff\",\n    borderRadius: \"25px\",\n  };\n  return <div style={style}></div>;\n};\n\nconst ContainerBox = styled.div`\n  margin-top: 1.5rem;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  width: 1300px;\n  display: flex;\n  position: relative;\n  align-items: center;\n  height: 40px;\n  font-family: \"NotoSansKR\";\n  font-weight: \"bold\";\n  font-style: normal;\n  text-decoration: none;\n  z-index: 30;\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n`;\n\nconst StyledLink = styled(Link)`\n  border-bottom: ${(props) => (props.isActive ? \"2px solid black\" : \"\")};\n  font-size: ${(props) => (props.isActive ? \"22px\" : \"20px\")};\n\n  &.potcha{\n    position: absolute;\n    left: 60px;\n  }\n\n  &.login{\n    position: absolute;\n    right: 50px;\n  }\n`;\n","import { ResponsiveBar } from \"@nivo/bar\";\n\nconst OttServiceRateChart = ({ data }) => (\n  <ResponsiveBar\n    data={data}\n    keys={[\"Youtube\", \"Netflix\", \"Facebook\", \"NaverTv\", \"AfricaTv\"]}\n    indexBy=\"country\"\n    margin={{ top: 10, right: 130, bottom: 50, left: 60 }}\n    padding={0.3}\n    layout=\"horizontal\"\n    valueScale={{ type: \"linear\" }}\n    indexScale={{ type: \"band\", round: true }}\n    colors={{ scheme: \"nivo\" }}\n    defs={[\n      {\n        id: \"lines\",\n        type: \"patternLines\",\n        background: \"inherit\",\n        color: \"#rgba(136, 19, 17, 0.5)\",\n        rotation: -45,\n        lineWidth: 6,\n        spacing: 10,\n      },\n    ]}\n    theme={{\n      labels: {\n        text: {\n          fontFamily: \"BMDOHYEON\",\n          fontSize: \"13\",\n        },\n      },\n      // 글자 크기 변경\n      axis: {\n        ticks:{\n          text: {\n            fontSize: \"13\",\n            fontFamily: \"BMDOHYEON\",\n          }\n        },\n      },\n      legends: {\n        text: {\n          fontSize: \"13\",\n          fontFamily: \"BMDOHYEON\",\n        }\n      },\n    }}\n    fill={[\n      {\n        match: {\n          id: \"Netflix\",\n        },\n        id: \"lines\",\n      },\n    ]}\n    borderColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n    axisTop={null}\n    axisRight={null}\n    axisBottom={{\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: \"RATIO\",\n      legendPosition: \"middle\",\n      legendOffset: 40,\n    }}\n    axisLeft={{\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: \"YEAR\",\n      legendPosition: \"middle\",\n      legendOffset: -50,\n    }}\n    labelSkipWidth={12}\n    labelSkipHeight={12}\n    labelTextColor={{ from: \"color\", modifiers: [[\"darker\", 1.6]] }}\n    legends={[\n      {\n        dataFrom: \"keys\",\n        anchor: \"bottom-right\",\n        direction: \"column\",\n        justify: false,\n        translateX: 120,\n        translateY: 0,\n        itemsSpacing: 2,\n        itemWidth: 100,\n        itemHeight: 20,\n        itemDirection: \"left-to-right\",\n        itemOpacity: 0.85,\n        symbolSize: 20,\n        effects: [\n          {\n            on: \"hover\",\n            style: {\n              itemOpacity: 1,\n            },\n          },\n        ],\n      },\n    ]}\n    role=\"application\"\n    ariaLabel=\"Nivo bar chart demo\"\n    barAriaLabel={function (e) {\n      return e.id + \": \" + e.formattedValue + \" in country: \" + e.indexValue;\n    }}\n  />\n);\n\nexport default OttServiceRateChart;","const OttServiceRateData = [\n  {\n    country: \"2020\",\n    Youtube: 62.3,\n    YoutubeColor: \"rgb(255, 0, 0)\",\n    Netflix: 16.3,\n    NetflixColor: \"rgb(228, 30, 27)\",\n    Facebook: 8.6,\n    FacebookColor: \"rgb(72, 103, 130)\",\n    NaverTv: 4.8,\n    NaverTvColor: \"rgb(3, 225, 100)\",\n    AfricaTv: 2.6,\n    AfricaTvColor: \"rgb(14, 68, 152)\",\n  },\n  {\n    country: \"2019\",\n    Youtube: 47.8,\n    YoutubeColor: \"rgb(255, 0, 0)\",\n    Netflix: 4.9,\n    NetflixColor: \"rgb(228, 30, 27)\",\n    Facebook: 9.9,\n    FacebookColor: \"rgb(72, 103, 130)\",\n    NaverTv: 6.1,\n    NaverTvColor: \"rgb(3, 225, 100)\",\n    AfricaTv: 4.0,\n    AfricaTvColor: \"rgb(14, 68, 152)\",\n  },\n  {\n    country: \"2018\",\n    Youtube: 38.4,\n    YoutubeColor: \"rgb(255, 0, 0)\",\n    Netflix: 1.3,\n    NetflixColor: \"rgb(228, 30, 27)\",\n    Facebook: 11.5,\n    FacebookColor: \"rgb(72, 103, 130)\",\n    NaverTv: 7.1,\n    NaverTvColor: \"rgb(3, 225, 100)\",\n    AfricaTv: 3.8,\n    AfricaTvColor: \"rgb(14, 68, 152)\",\n  },\n];\n\nexport default OttServiceRateData;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  ComposedChart,\n  Line,\n  Bar,\n  XAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function MovieCustomerRateChart({ data }) {\n  return (\n    <ChartComponent>\n      <ComposedChart\n        width={800}\n        height={600}\n        data={data}\n        margin={{\n          top: 20,\n          right: 50,\n          bottom: 50,\n          left: 50,\n        }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis\n          dataKey=\"name\"\n          label={{ value: \"year\", position: \"insideBottomRight\", offset: 10 }}\n          scale=\"band\"\n        />\n        <Tooltip position={{ y: 200 }} />\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <Legend/>\n        <Bar\n          dataKey=\"개봉 영화 [단위: 편]\"\n          barSize={40}\n          fill=\"#413ea0\"\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"영화 관람객 [단위: 십만명]\"\n          stroke=\"#ff7300\"\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"확진자 수 [단위: 백명]\"\n          stroke=\"#ff0000\"\n        />\n      </ComposedChart>\n    </ChartComponent>\n  );\n}\n\nconst ChartComponent = styled.div`\n  font-family: sans-serif;\n  text-align: center;\n`;\n","const MovieCustomerRateData = [\n  {\n    name: \"2018\",\n    \"개봉 영화 [단위: 편]\": 661,\n    \"확진자 수 [단위: 백명]\": 0,\n    \"영화 관람객 [단위: 십만명]\": 1101,\n  },\n  {\n    name: \"2019\",\n    \"개봉 영화 [단위: 편]\": 697,\n    \"확진자 수 [단위: 백명]\": 0,\n    \"영화 관람객 [단위: 십만명]\": 1156,\n  },\n  {\n    name: \"2020\",\n    \"개봉 영화 [단위: 편]\": 782,\n    \"확진자 수 [단위: 백명]\": 617,\n    \"영화 관람객 [단위: 십만명]\": 404,\n  },\n  {\n    name: \"2021\",\n    \"개봉 영화 [단위: 편]\": 619,\n    \"확진자 수 [단위: 백명]\": 2759,\n    \"영화 관람객 [단위: 십만명]\": 150,\n  },\n];\n\nexport default MovieCustomerRateData;\n","import { ResponsivePie } from '@nivo/pie'\n\nconst chartColors = ['#377eb8', '#377eb8', '#f46d43', '#f46d43'];\n\nconst NetflixOriginalMovieChart = ({ data }) => (\n    <ResponsivePie\n        data={data}\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        activeOuterRadiusOffset={8}\n        colors={ chartColors }\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 3 ] ] }}\n        arcLinkLabelsSkipAngle={10}\n        arcLinkLabelsTextColor=\"#333333\"\n        arcLinkLabelsThickness={2}\n        arcLinkLabelsColor={{ from: 'color' }}\n        arcLabelsSkipAngle={10}\n        arcLabelsTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n\n        legends={[\n            {\n                anchor: 'bottom',\n                direction: 'row',\n                justify: false,\n                translateX: 0,\n                translateY: 56,\n                itemsSpacing: 0,\n                itemWidth: 130,\n                itemHeight: 18,\n                itemTextColor: '#999',\n                itemDirection: 'left-to-right',\n                itemOpacity: 1,\n                symbolSize: 18,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    />\n)\n\nexport default NetflixOriginalMovieChart;","const NetflixOriginalMovieData = \n  [\n    {\n      \"id\": \"2017 작품 수\",\n      \"label\": \"코로나 이전(2017)\",\n      \"value\": 1,\n      \"color\": \"hsl(244, 100%, 50%)\"\n    },\n    {\n      \"id\": \"2019 작품 수\",\n      \"label\": \"코로나 이전(2019)\",\n      \"value\": 1,\n      \"color\": \"hsl(244, 100%, 50%)\"\n    },\n    {\n      \"id\": \"2020 작품 수\",\n      \"label\": \"코로나 이후(2020)\",\n      \"value\": 3,\n      \"color\": \"hsl(0, 100%, 50%)\"\n    },\n    {\n      \"id\": \"2021 작품 수\",\n      \"label\": \"코로나 이후(2021)\",\n      \"value\": 5,\n      \"color\": \"hsl(0, 100%, 50%)\"\n    }\n  ]\n\nexport default NetflixOriginalMovieData;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"fullpage.js/vendors/scrolloverflow\"; // Optional. When using scrollOverflow:true\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport styled from \"styled-components\";\nimport { SectionsContainer } from \"react-fullpage\";\nimport NonSigninNavigation from \"./NonSigninNavigation\";\nimport OttServiceRateChart from \"./OttServiceRateChart\";\nimport OttServiceRateData from \"./OttServiceRateData\";\nimport MovieCustomerRateChart from \"./MovieCustomerRateChart\";\nimport MovieCustomerRateData from \"./MovieCustomerRateData\";\nimport NetflixOriginalMovieChart from \"./NetfilxOriginalMovieChart\";\nimport NetflixOriginalMovieData from \"./NetfilxOriginalMovieData\";\n\nconst NonSignIn = () => {\n  return (\n    <div>\n      <NonSigninNavigationContainer\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          zIndex: \"15\",\n        }}\n      >\n        <NonSigninNavigation />\n      </NonSigninNavigationContainer>\n      <SectionsContainer>\n        <ReactFullpage\n          scrollOverflow={true}\n          loopBottom={true}\n          // sectionsColor={[\"orange\", \"purple\", \"green\", \"black\"]}\n          render={({ state, fullpageApi }) => {\n            return (\n              <FullPage>\n                <div className=\"section\">\n                  <Title>아직 POTCHA 회원이 아니신가요?</Title>\n                  <Link to=\"/signup\">\n                    <Button>회원가입</Button>\n                  </Link>\n                </div>\n                <div className=\"section\">\n                  <div className=\"slide\">\n                    <div>\n                      <Title>\n                        코로나 확진자 증가에 따라 전국 영화관 관람객 감소\n                      </Title>\n                      <div>\n                        <MovieCustomerRateChart data={MovieCustomerRateData} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"slide\">\n                    <Title>점점 늘어나는 OTT 서비스 이용자!&#128526;</Title>\n                    <div\n                      style={{\n                        height: \"400px\",\n                        width: \"1000px\",\n                        backgroundColor: \"white\",\n                      }}\n                    >\n                      <OttServiceRateChart data={OttServiceRateData} />\n                    </div>\n                  </div>\n                  <div className=\"slide\">\n                    <Title>\n                      코로나 이전과 이후 영화 상영 방식에 있어, OTT 서비스인\n                      넷플릭스로 상영하는 영화의 수 변화&#128200;\n                    </Title>\n                    <div\n                      style={{\n                        height: \"800px\",\n                        width: \"800px\",\n                        backgroundColor: \"white\",\n                      }}\n                    >\n                      <NetflixOriginalMovieChart\n                        data={NetflixOriginalMovieData}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"section\">\n                  <div className=\"slide\">\n                    <div>\n                      <Title>\n                        따라서 우리는 이런 서비스를 제공합니다!&#127839;\n                      </Title>\n                    </div>\n                  </div>\n                  <div className=\"slide\">\n                    <Title>\n                      하나! OTT 서비스의 콘텐츠의 흥행 예측!&#128521;\n                    </Title>\n                  </div>\n                  <div className=\"slide\">\n                    <Title>\n                      둘! 당신의 취향을 분석해 추천작을 알려주는 찐감자\n                      콘텐츠&#129364;\n                    </Title>\n                  </div>\n                </div>\n              </FullPage>\n            );\n          }}\n        />\n      </SectionsContainer>\n    </div>\n  );\n};\n\nexport default NonSignIn;\n\nconst NonSigninNavigationContainer = styled.div`\n  /* position: sticky;\n  top: 0;\n  z-index: 30;\n   */\n`;\n\nconst FullPage = styled.div`\n  font-family: arial, helvetica;\n`;\n\nconst Title = styled.h3`\n  font-size: 5em;\n  text-align: center;\n  color: #fff;\n  font-weight: 700;\n`;\n\nconst Button = styled.button`\n  padding: 0.93em 1.87em;\n  background: #35495e;\n  border-radius: 5px;\n  border-color: transparent;\n  display: block;\n  color: #fff;\n  margin: 0 auto;\n  cursor: pointer;\n  font-size: 0.85em;\n`;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport NonSigninNavigation from \"./NonSigninNavigation\";\nimport styled from \"styled-components\";\n\nconst Signin = ({ windowHeight }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      alert(\"아이디 또는 비밀번호를 입력해주세요\");\n      return;\n    }\n\n    if (!email && !password) return;\n\n    const data = {\n      email: email,\n      password: password,\n    };\n\n    axios\n      .post(\"/api/login\", data)\n      .then((response) => {\n        console.log(response);\n        if (response.data.result === \"success\") {\n          localStorage.setItem(\n            \"access_token\",\n            JSON.stringify(response.data.access_token)\n          );\n          localStorage.setItem(\n            \"nickname\",\n            JSON.stringify(response.data.nickname)\n          );\n          localStorage.setItem(\n            \"photolink\",\n            JSON.stringify(response.data.photolink)\n          );\n\n          history.push(\"/main\");\n          alert(\"로그인에 성공하였습니다.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error.response);\n        alert(\"아이디 또는 비밀번호를 확인하세요\");\n      });\n  };\n\n  return (\n    <div>\n      <NonSigninNavigationContainer\n        style={{\n          position: \"absolute\",\n          top: \"0\",\n          zIndex: \"15\",\n        }}\n      >\n        <NonSigninNavigation />\n      </NonSigninNavigationContainer>\n      <div\n        style={{\n          minHeight: `${windowHeight - 320}px`,\n        }}\n      >\n        <form form onSubmit={handleSubmit}>\n          <div>\n            <input\n              placeholder=\"Email\"\n              type=\"email\"\n              value={email}\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              placeholder=\"Password\"\n              type=\"Password\"\n              value={password}\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\"> 로그인 </button> <br />\n          <br />\n          <label>아직 POTCHA의 회원이 아니신가요? </label>\n          <Link to=\"/signup\">\n            <button> 회원가입 </button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signin;\n\nconst NonSigninNavigationContainer = styled.div`\n  /* position: sticky;\n  top: 0;\n  z-index: 30;\n   */\n`;\n\nconst FullPage = styled.div`\n  font-family: arial, helvetica;\n`;\n","import React, { useState, useCallback } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NonSigninNavigation from \"./NonSigninNavigation\";\nimport styled from \"styled-components\";\n\nconst Signup = ({ windowHeight }) => {\n  const [email, setEmail] = useState(\"\");\n  const [emailCheck, setEmailCheck] = useState(true);\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordVali, setPasswordVali] = useState(true);\n\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n\n  const [nickname, setNickname] = useState(\"\");\n  const [nicknameCheck, setNicknameCheck] = useState(true);\n  const [nicknameValidate, setNicknameValidate] = useState(true);\n\n  const history = useHistory();\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordError(e.target.value !== password);\n      setPasswordCheck(e.target.value);\n    },\n    [passwordCheck]\n  );\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n    const checkEmail = (value) => {\n      const regExp =\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n      return regExp.test(value);\n    };\n    !checkEmail(e.target.value) ? setEmailCheck(false) : setEmailCheck(true);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n    const checkPassword = (value) => {\n      const regExp = /^.*(?=.{10,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/;\n      return regExp.test(value);\n    };\n    !checkPassword(e.target.value)\n      ? setPasswordVali(false)\n      : setPasswordVali(true);\n  };\n\n  const onChangeNickname = (e) => {\n    setNickname(e.target.value);\n    const checkNickname = (value) => {\n      const regExp = /^[a-zA-Zㄱ-힣0-9]*$/;\n      return regExp.test(value);\n    };\n    !checkNickname(e.target.value)\n      ? setNicknameCheck(false)\n      : setNicknameCheck(true);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!emailCheck) return;\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!nicknameCheck) return;\n\n    const data = {\n      email: email,\n      password: password,\n      nickname: nickname,\n    };\n    console.log(data);\n\n    axios.post(\"/api/signup\", data).then((response) => {\n      console.log(response);\n      if (response.data.result === \"fail\") {\n        setNicknameValidate(false);\n      } else {\n        alert(\"회원 가입에 성공하셨습니다.\");\n        history.push(\"/signin\");\n      }\n    });\n  };\n\n  return (\n    <div>\n      <NonSigninNavigationContainer\n        style={{ position: \"absolute\", top: \"0\", zIndex: \"15\" }}\n      >\n        <NonSigninNavigation />\n      </NonSigninNavigationContainer>\n      <div\n        style={{\n          minHeight: `${windowHeight - 320}px`,\n        }}\n      >\n        <form onSubmit={onSubmit}>\n          <div>\n            <input\n              name=\"Email\"\n              value={email}\n              required\n              onChange={onChangeEmail}\n              placeholder=\"Email\"\n            />\n            {!emailCheck && (\n              <div style={{ color: \"red\", fontSize: 12 }}>\n                이메일 형식이 유효하지 않습니다.\n              </div>\n            )}\n          </div>\n          <div>\n            <input\n              name=\"Password\"\n              type=\"Password\"\n              value={password}\n              required\n              onChange={onChangePassword}\n              placeholder=\"Password\"\n            />\n            {!passwordVali && (\n              <div style={{ color: \"red\", fontSize: 12 }}>\n                대·소·특수문자, 숫자 최소 2개 이상 포함, 최소 10자리를\n                입력해주세요\n              </div>\n            )}\n          </div>\n          <div>\n            <input\n              name=\"Password-check\"\n              type=\"Password\"\n              value={passwordCheck}\n              required\n              onChange={onChangePasswordCheck}\n              placeholder=\"Confirm Password\"\n            />\n            {passwordError && (\n              <div style={{ color: \"red\", fontSize: 12 }}>\n                비밀번호가 일치하지 않습니다.\n              </div>\n            )}\n          </div>\n          <div>\n            <input\n              name=\"Nickname\"\n              value={nickname}\n              required\n              onChange={onChangeNickname}\n              placeholder=\"Nickname\"\n            />\n            {!nicknameCheck && (\n              <div style={{ color: \"red\", fontSize: 12 }}>\n                한글, 대·소문자, 숫자만 입력해주세요\n              </div>\n            )}\n            {!nicknameValidate && (\n              <div style={{ color: \"red\", fontSize: 12 }}>\n                중복된 이메일이 존재합니다.\n              </div>\n            )}\n          </div>\n          <div>\n            <button type=\"submit\"> 확인 </button>\n            <Link to=\"/signin\">\n              <p>이미 가입하신 회원이시라면 로그인을 진행해보세요</p>\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n\nconst NonSigninNavigationContainer = styled.div`\n  /* position: sticky;\n  top: 0;\n  z-index: 30;\n   */\n`;\n\nconst FullPage = styled.div`\n  font-family: arial, helvetica;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Link as ReactRouterDomLink,\n  useLocation,\n  useHistory,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GoSearch } from \"react-icons/go\";\nimport { BiMoviePlay } from \"react-icons/bi\";\nimport { CgScreen } from \"react-icons/cg\";\nimport { GiBasket } from \"react-icons/gi\";\nimport \"../styles/FontStyle.css\";\n\nconst Link = ({ isActive, children, ...props }) => {\n  return <ReactRouterDomLink {...props}>{children}</ReactRouterDomLink>;\n};\n\nconst Navigation = ({ userid, logout }) => {\n  const [search, setSearch] = useState(\"\");\n  const { pathname } = useLocation();\n\n  const history = useHistory();\n  useEffect(() => {\n    if (search) {\n      console.log(search);\n      const body = {\n        search,\n      };\n      history.push(`/search/${search}`);\n      setSearch(\"\");\n    }\n  }, [search]);\n\n  return (\n    <ContainerBox>\n      <div style={{ display: \"inline-block\" }} className=\"ContainerPosition\">\n        <BackgroundSquare />\n        <Container>\n          <StyledLink\n            to=\"/main\"\n            isActive={pathname === \"/main\"}\n            className=\"potcha\"\n          >\n            POTCHA\n          </StyledLink>\n          <Menu>\n            <StyledLink\n              to=\"/list/movie\"\n              isActive={pathname === \"/list/movie\"}\n              className=\"movie\"\n            >\n              <BiMoviePlay style={{ transform: \"translateY(28%)\" }} />\n              Movie\n            </StyledLink>\n            <StyledLink\n              to=\"/list/tv\"\n              isActive={pathname === \"/list/tv\"}\n              className=\"tv\"\n            >\n              <CgScreen style={{ transform: \"translateY(28%)\" }} />\n              TV\n            </StyledLink>\n            <StyledLink\n              to={`/potato-basket/${JSON.parse(\n                localStorage.getItem(\"nickname\")\n              )}`}\n              isActive={\n                pathname ===\n                `/potato-basket/${JSON.parse(localStorage.getItem(\"nickname\"))}`\n              }\n              className=\"potatoBasket\"\n            >\n              <GiBasket style={{ transform: \"translateY(28%)\" }} />\n              PotatoBasket\n            </StyledLink>\n          </Menu>\n          <StyledSearch className=\"search\">\n            <SearchTextField setSearch={setSearch} search={search} />\n          </StyledSearch>\n          <StyledLink\n            to=\"/mypage\"\n            isActive={pathname === \"/mypage\"}\n            className=\"mypage\"\n          >\n            MyPage\n          </StyledLink>\n          <CustomButton onClick={logout}>Logout</CustomButton>\n        </Container>\n      </div>\n    </ContainerBox>\n  );\n};\n\nexport default Navigation;\n\nconst BackgroundSquare = () => {\n  const style = {\n    position: \"absolute\",\n    zIndex: \"100\",\n    width: \"1300px\",\n    height: \"60px\",\n    backgroundColor: \"#f7f0ff\",\n    borderRadius: \"25px\",\n    boxShadow: \"0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n  };\n  return <div style={style}></div>;\n};\n\nconst ContainerBox = styled.div`\n  margin-top: 1.5rem;\n  margin-bottom: 30px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  width: 1300px;\n  display: flex;\n  position: relative;\n  justify-content: space-around;\n  align-items: center;\n  height: 60px;\n  font-family: \"NotoSansKR\";\n  font-weight: \"bold\";\n  font-style: normal;\n  text-decoration: none;\n  z-index: 200;\n`;\n\nconst Menu = styled.div`\n  /* display: flex;\n  justify-content: space-around;\n  width: 25%; */\n`;\n\nconst StyledLink = styled(Link)`\n  border-bottom: ${(props) => (props.isActive ? \"2px solid black\" : \"\")};\n  font-size: ${(props) => (props.isActive ? \"22px\" : \"20px\")};\n\n  &.potcha {\n    position: absolute;\n    left: 60px;\n  }\n\n  &.movie {\n    position: absolute;\n    transform: translateY(-60%);\n    left: 250px;\n  }\n\n  &.tv {\n    position: absolute;\n    transform: translateY(-60%);\n    left: 370px;\n  }\n\n  &.potatoBasket {\n    position: absolute;\n    transform: translateY(-60%);\n    left: 470px;\n  }\n\n  &.mypage {\n    position: absolute;\n    right: 180px;\n  }\n`;\n\nconst StyledSearch = styled.div`\n  width: 200px;\n  position: absolute;\n  right: 300px;\n`;\n\nconst CustomButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  font-size: 20px;\n  position: absolute;\n  right: 50px;\n`;\n\nexport function SearchTextField({ setSearch }) {\n  const debouncedOnChange = debounce(setSearch, 500);\n  return (\n    <InputContainer>\n      <SearchButton>\n        <Icon />\n        <label style={{ cursor: \"pointer\", fontSize: \"15px\" }} for=\"search\">\n          제목\n        </label>\n      </SearchButton>\n      <InputField\n        type=\"text\"\n        id=\"search\"\n        placeholder=\" 🔍 제목으로 검색하기\"\n        autocomplete=\"off\"\n        onChange={(e) => {\n          debouncedOnChange(e.target.value);\n        }}\n      />\n    </InputContainer>\n  );\n}\n\nfunction debounce(func, timeout) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\nconst Icon = styled(GoSearch)`\n  position: relative;\n  top: 3px;\n`;\n\nconst InputContainer = styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nconst InputField = styled.input`\n  float: right;\n  width: 50px;\n  height: 30px;\n  background-color: transparent;\n  transition: width 0.2s ease-in-out;\n  cursor: pointer;\n  border: none;\n  padding: 0 10px;\n  color: transparent;\n  ::placeholder {\n    color: transparent;\n  }\n  :active,\n  :focus {\n    width: 155px;\n    background: black;\n    color: white;\n    z-index: 9999;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n    transition: width 0.2s ease-in-out;\n    ::placeholder {\n      color: white;\n    }\n  }\n`;\n\nconst SearchButton = styled.div`\n  display: inline;\n  position: relative;\n  top: 5px;\n  left: 80px;\n  cursor: pointer;\n  z-index: -99999;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Potcha_info = styled.div`\n  width: 1300px;\n  height: 180px;\n  margin: 30px auto;\n  background: #ffffff8d;\n  border-radius: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\n\nconst Footer = () => {\n  return (\n    <Potcha_info>\n      <img\n        className=\"potcha_img\"\n        src=\"https://cdn.discordapp.com/attachments/880725572475559957/898084782439817228/image_processing20200713-5473-4ltg8i.gif\"\n        alt=\"\"\n        style={{ width: \"150px\", marginRight: \"20px\" }}\n      />\n      <p className=\"potcha_text\" style={{ textAlign: \"left\" }}>\n        <span>\n          카우치 포테이토가 되고픈 자들을 위한 서비스,{\" \"}\n          <b style={{ fontWeight: \"bold\" }}>포챠 POTCHA</b>\n        </span>\n        <br />\n        <span>고객센터 | 전화 : 070-4633-2015 | 이메일 : contact@elice.io</span>\n        <br />\n        <span>\n          대표:\n          <a href=\"https://github.com/redhi\" target=\"_blank\">\n            김민지\n          </a>\n          ,\n          <a href=\"https://github.com/MojitoLimeDouble\" target=\"_blank\">\n            김효곤\n          </a>\n          ,\n          <a href=\"https://github.com/Eunyeol-Lucas\" target=\"_blank\">\n            남은열\n          </a>\n          ,\n          <a href=\"https://github.com/Raihyul\" target=\"_blank\">\n            이민영\n          </a>\n        </span>\n        <br />\n        <span>Copyright© POTCHA(주) All rights reserved.</span>\n      </p>\n    </Potcha_info>\n  );\n};\n\nexport default Footer;\n","// 감자 바구니 영화/tv 프로그램의 각각 poster와 title을 받아옴\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst PosterAndTitle = ({ prediction , category}) => {\n  return (\n    <Container>\n      <Link to={`/detail/${category}/${prediction.id}/${prediction.title}`}>\n        <Poster bg={prediction.poster_path} />\n        <h1>{prediction.title}</h1>\n      </Link>\n    </Container>\n  );\n};\n\nexport default PosterAndTitle;\n\nconst Container = styled.div`\n  height: 250px;\n  width: 150px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  border-radius: 7px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px 15px;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  height: 210px;\n  width: 150px;\n  background-size: cover;\n  background-position: center center;\n  border-top-left-radius: 7px;\n  border-top-right-radius: 7px;\n`;\n","import React from \"react\";\nimport ReactWordcloud from \"react-wordcloud\";\nimport { Resizable } from \"re-resizable\";\n\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\n\nconst resizeStyle = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nconst options = {\n  colors: [\n    \"rgb(116, 206, 227)\",\n    \"rgb(31, 120, 180)\",\n    \"rgb(178, 223, 138)\",\n    \"rgb(51, 160, 44)\",\n    \"rgb(251, 154, 153)\",\n    \"rgb(227, 26, 28)\",\n    \"rgb(253, 191, 111)\",\n    \"rgb(255, 127, 0)\",\n    \"rgb(202, 178, 214)\",\n    \"rgb(106, 61, 154)\",\n  ],\n  enableTooltip: true,\n  deterministic: false,\n  fontFamily: \"impact\",\n  fontSizes: [10, 100],\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  padding: 1,\n  rotations: 3,\n  rotationAngles: [0, 90],\n  scale: \"sqrt\",\n  spiral: \"archimedean\",\n  transitionDuration: 1000,\n};\n\nconst WordCloudComponent = ({ words }) => {\n  return (\n    <div>\n      <Resizable\n        defaultSize={{\n          width: 500,\n          height: 500,\n        }}\n        style={resizeStyle}\n      >\n        <ReactWordcloud options={options} words={words} />\n      </Resizable>\n    </div>\n  );\n};\n\nexport default WordCloudComponent;\n","const WordCloudDataExample = [\n  {\n    text: \"told\",\n    value: 64,\n  },\n  {\n    text: \"mistake\",\n    value: 11,\n  },\n  {\n    text: \"thought\",\n    value: 100,\n  },\n  {\n    text: \"bad\",\n    value: 30,\n  },\n  {\n    text: \"early\",\n    value: 20,\n  },\n  {\n    text: \"ease\",\n    value: 150,\n  },\n  {\n    text: \"earth\",\n    value: 50,\n  },\n  {\n    text: \"eat\",\n    value: 17,\n  },\n  {\n    text: \"eagle\",\n    value: 17,\n  },\n  {\n    text: \"eaves\",\n    value: 17,\n  },\n];\n\nexport default WordCloudDataExample;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport PosterAndTitle from \"./PosterAndTitle\";\nimport WordCloudComponent from \"./WordCloudComponent\";\nimport WordCloudDataExample from \"./WordCloudDataExample\";\nimport { useParams } from \"react-router-dom\";\nimport tokenHeader from \"../authorization/tokenHeader\";\n\nconst PotatoBasket = ({\n  moviePotatoList,\n  tvPotatoList,\n  onMoviePotatoes,\n  onTvPotatoes,\n}) => {\n  const params = useParams();\n  console.log(\"params\", params);\n  const potatoData = async () => {\n    try {\n      const response = await axios.get(\n        `/api/potato_basket/${params.nickname}`,\n        {\n          headers: tokenHeader(),\n        }\n      );\n      onMoviePotatoes(response.data[0].movie);\n      onTvPotatoes(response.data[1].tv);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n  // 영화 찐 감자 분석\n  const movieAnalysis = async () => {\n    try {\n      const response = await axios.get(\n        `/api/potato_basket/${params.nickname}/movie`,\n        {\n          headers: tokenHeader(),\n        }\n      );\n      console.log(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n  // TV 찐 감자 분석\n  const tvAnalysis = async () => {\n    try {\n      const response = await axios.get(\n        `/api/potato_basket/${params.nickname}/tv`,\n        {\n          headers: tokenHeader(),\n        }\n      );\n      console.log(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    potatoData();\n    movieAnalysis();\n    tvAnalysis();\n  }, [params]);\n\n  return (\n    <div>\n      <Container>\n        <Basket>\n          <BasketTitle>영화 감자 바구니</BasketTitle>\n          <Potatoes>\n            <ListDetail>\n              {!moviePotatoList ? (\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\n                  Loading ...\n                </h1>\n              ) : (\n                moviePotatoList?.map((movie) => (\n                  <PosterAndTitle\n                    key={movie.id}\n                    prediction={movie}\n                    category=\"movie\"\n                  />\n                ))\n              )}\n            </ListDetail>\n          </Potatoes>\n        </Basket>\n        <PotatoAnalysis>\n          <BasketTitle>영화 찐 감자 분석</BasketTitle>\n          <WordCloudComponent\n            style={{ display: \"static\" }}\n            words={WordCloudDataExample}\n          />\n        </PotatoAnalysis>\n      </Container>\n      <Container>\n        <Basket>\n          <BasketTitle>TV 감자 바구니</BasketTitle>\n          <Potatoes>\n            <ListDetail>\n              {!tvPotatoList ? (\n                <h1 style={{ fontSize: \"30px\", color: \"black\" }}>\n                  Loading ...\n                </h1>\n              ) : (\n                tvPotatoList?.map((tv) => (\n                  <PosterAndTitle key={tv.id} prediction={tv} category=\"tv\" />\n                ))\n              )}\n            </ListDetail>\n          </Potatoes>\n        </Basket>\n        <PotatoAnalysis>\n          <BasketTitle>TV 찐 감자 분석</BasketTitle>\n          <WordCloudComponent\n            style={{ display: \"static\" }}\n            words={WordCloudDataExample}\n          />\n        </PotatoAnalysis>\n      </Container>\n    </div>\n  );\n};\n\nexport default PotatoBasket;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin: 3rem;\n  margin-top: 0px;\n`;\n\nconst Basket = styled.div`\n  width: 800px;\n  background-color: orange;\n`;\n\nconst BasketTitle = styled.p`\n  font-size: x-large;\n  font-weight: bold;\n  margin-bottom: 1rem;\n`;\n\nconst Potatoes = styled.div`\n  height: 500px;\n  overflow-y: auto;\n`;\n\nconst PotatoAnalysis = styled.div`\n  height: 555px;\n  width: 500px;\n  background-color: gainsboro;\n`;\n\nconst ListDetail = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\n","const MOVIE = \"potatoes/MOVIE\";\nconst TV = \"potatoes/TV\";\n\nexport const moviePotatoes = (moviePotatoList) => ({\n  type: MOVIE,\n  moviePotatoList,\n});\nexport const tvPotatoes = (tvPotatoList) => ({ type: TV, tvPotatoList });\n\nconst initialState = {\n  moviePotatoList: \"\",\n  tvPotatoList: \"\",\n};\n\nfunction catchPotato(state = initialState, action) {\n  switch (action.type) {\n    case MOVIE:\n      return {\n        ...state,\n        moviePotatoList: action.moviePotatoList,\n      };\n    case TV:\n      return {\n        ...state,\n        tvPotatoList: action.tvPotatoList,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default catchPotato;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PotatoBasket from \"../components/PotatoBasket\";\nimport { moviePotatoes, tvPotatoes } from \"../modules/potatoes\";\n\nconst PotatoesInBasket = ({\n  moviePotatoList,\n  tvPotatoList,\n  moviePotatoes,\n  tvPotatoes,\n}) => {\n  return (\n    <div>\n      <PotatoBasket\n        moviePotatoList={moviePotatoList}\n        tvPotatoList={tvPotatoList}\n        onMoviePotatoes={moviePotatoes}\n        onTvPotatoes={tvPotatoes}\n      />\n    </div>\n  );\n};\n\nexport default connect(\n  ({ catchPotato }) => ({\n    moviePotatoList: catchPotato.moviePotatoList,\n    tvPotatoList: catchPotato.tvPotatoList,\n  }),\n  { moviePotatoes, tvPotatoes }\n)(PotatoesInBasket);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// 흥행 예측 결과 출력\nconst Prediction = ({ prediction }) => {\n  return (\n    <Container style={{marginRight:\"30px\"}}>\n      <PredictPoster bg={prediction.poster_path} />\n      <PredictTitle>{prediction.title}</PredictTitle>\n    </Container>\n  );\n};\n\n// 코로나 이전 컨텐츠 추천\nconst Recommend = ({ prediction }) => {\n  return (\n    <Container style={{transform:\"translateY(3px)\"}}>\n      <RecommendPoster bg={prediction.poster_path} />\n      <RecommendTitle>{prediction.title}</RecommendTitle>\n    </Container>\n  );\n};\n\n// 메인 페이지 흥행 예측 포스터 출력용\nexport const PredictionOrder = ({ List, currTab }) => {\n  return (\n    <PredictContainer className=\"predictAndRecommend\">\n      <Link to={`/detail/${currTab}/${List[0].id}/${List[0].title}`}>\n        <Prediction prediction={List[0]} />\n      </Link>\n      {List.slice(1).map((list) => (\n        <div style={{display: \"grid\", gridTemplateColumns:\"1fr 1fr 1fr 1fr\", alignContent:\"flex-end\"}}>\n          <Link to={`/detail/${currTab}/${list.id}/${list.title}`}>\n            <Recommend prediction={list} key={list.id} />\n          </Link>\n        </div>\n      ))}\n    </PredictContainer>\n  );\n};\n\n// 카테고리 페이지 포스터 출력용\nexport const ContentsCard = ({ contents }) => {\n  return (\n    <Container>\n      <Poster bg={contents.poster_path} />\n      <Title>{contents.title}</Title>\n      {/* TODO: 찜 수는 따로 표기 또는 빼기 */}\n      {/* <h1>{contents.like_count}</h1> */}\n    </Container>\n  );\n};\n\nconst Container = styled.div``;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  width: 180px;\n  height: 250px;\n  margin: 0 auto;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  border-radius: 10px;\n`;\n\nconst PredictPoster = styled.div`\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  width: 230px;\n  height: 300px;\n  margin: 0 auto;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  border-radius: 10px;\n`;\n\nconst RecommendPoster = styled.div`\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  width: 150px;\n  height: 230px;\n  margin: 0 auto;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  border-radius: 10px;\n`;\n\nconst Title = styled.h2`\n  margin: 0 auto;\n  margin-bottom: 10px;\n  padding: 10px 0px;\n  font-family: \"NotoSansKR\";\n  font-weight: bold;\n  font-size: 15px;\n  align-items: center;\n  text-align: center;\n  height: 70px;\n  width: 170px;\n  color: black;\n`;\n\nconst PredictTitle = styled.h2`\n  margin: 0 auto;\n  margin-bottom: 10px;\n  padding: 10px 0px;\n  font-family: \"NotoSansKR\";\n  font-weight: bold;\n  font-size: 18px;\n  align-items: center;\n  text-align: center;\n  /* height: 70px; */\n  width: 250px;\n  color: black;\n`;\n\nconst RecommendTitle = styled.h2`\n  margin: 0 auto;\n  margin-bottom: 10px;\n  padding: 10px 0px;\n  font-family: \"NotoSansKR\";\n  font-weight: bold;\n  font-size: 13px;\n  align-items: center;\n  text-align: center;\n  height: 40px;\n  width: 160px;\n  color: black;\n`;\n\nconst PredictContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1.8fr 1fr 1fr 1fr 1fr;\n  /* background-color:#e5caff97 ; */\n  border-radius: 25px;\n  padding: 0px 20px;\n  /* margin-bottom: 20px; */\n`;\n","import styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  border-bottom: 1px solid #c5c4f8;\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nconst EactTab = styled.p`\n  font-size: 14px;\n  line-height: 22px;\n  color: #151618;\n  padding: 8px;\n  cursor: pointer;\n  + p {\n    margin-left: 16px;\n  }\n  transition: all 0.5s ease-out;\n  ${(props) =>\n    props.active &&\n    css`\n      color: #aba8f5;\n      font-weight: bold;\n      background: rgba(230, 230, 230, 0.0001);\n      box-shadow: inset 0px -4px 0px #aba8f5;\n    `}\n`;\n\nconst tabs = [\"MOVIE\", \"TV\"];\n\nconst Tab = ({ currTab, onClick }) => {\n  return (\n    <Container>\n      {tabs.map((tab, i) => {\n        return (\n          <EactTab\n            key={`${tab}-${i}`}\n            active={currTab === tab}\n            onClick={() => onClick(tab)}\n          >\n            {tab}\n          </EactTab>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Tab;\n","import { ResponsivePie } from \"@nivo/pie\";\n\nconst MyResponsivePie = ({ data }) => (\n  <ResponsivePie\n    data={data}\n    margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n    innerRadius={0.5}\n    cornerRadius={5}\n    activeOuterRadiusOffset={8}\n    colors={[\"#ebc8f6\", \"#edc3d8\", \"#d1c9e9\", \"#dce4f2\", \"#feddc8\"]}\n    borderWidth={1}\n    borderColor={{ from: \"color\", modifiers: [[\"darker\", \"0.2\"]] }}\n    arcLinkLabelsTextColor=\"#333333\"\n    arcLinkLabelsOffset={9}\n    arcLinkLabelsDiagonalLength={17}\n    arcLinkLabelsThickness={2}\n    arcLinkLabelsColor={{ from: \"color\" }}\n    enableArcLabels={false}\n    arcLabelsSkipAngle={10}\n    arcLabelsTextColor={{ from: \"color\", modifiers: [[\"darker\", \"2\"]] }}\n    defs={[\n      {\n        id: \"dots\",\n        type: \"patternDots\",\n        background: \"inherit\",\n        color: \"rgba(255, 255, 255, 0.3)\",\n        size: 4,\n        padding: 1,\n        stagger: true,\n      },\n      {\n        id: \"lines\",\n        type: \"patternLines\",\n        background: \"inherit\",\n        color: \"rgba(255, 255, 255, 0.3)\",\n        rotation: -45,\n        lineWidth: 6,\n        spacing: 10,\n      },\n    ]}\n    theme={{\n      labels: {\n        text: {\n          fontFamily: \"NotoSansKR\",\n          fontWeight: \"bold\",\n          fontSize: \"13\",\n          // TODO: 일정 길이 이상의 글자가 잘려 보이는 것 수정\n        },\n      },\n    }}\n  />\n);\n\nexport default MyResponsivePie;\n","export const movieGenres = [\n  {\n    id: \"모험\",\n    label: \"모험\",\n    value: 91,\n    color: \"#ebc8f6\",\n  },\n  {\n    id: \"액션\",\n    label: \"액션\",\n    value: 81,\n    color: \"#edc3d8\",\n  },\n  {\n    id: \"SF\",\n    label: \"SF\",\n    value: 63,\n    color: \"#d1c9e9\",\n  },\n  {\n    id: \"코미디\",\n    label: \"코미디\",\n    value: 47,\n    color: \"#dce4f2\",\n  },\n  {\n    id: \"판타지\",\n    label: \"판타지\",\n    value: 44,\n    color: \"#feddc8\",\n  },\n];\n\nexport const movieCountry = [\n  {\n    id: \"US\",\n    label: \"US\",\n    value: 86,\n    color: \"#ebc8f6\",\n  },\n  {\n    id: \"GB\",\n    label: \"GB\",\n    value: 28,\n    color: \"#edc3d8\",\n  },\n  {\n    id: \"FR\",\n    label: \"FR\",\n    value: 16,\n    color: \"#d1c9e9\",\n  },\n  {\n    id: \"JP\",\n    label: \"JP\",\n    value: 15,\n    color: \"#dce4f2\",\n  },\n  {\n    id: \"CA\",\n    label: \"CA\",\n    value: 12,\n    color: \"#feddc8\",\n  },\n];\n\nexport const movieKeyword = [\n  {\n    id: \"paris, france\",\n    label: \"paris, france\",\n    value: 17,\n    color: \"#ebc8f6\",\n  },\n  {\n    id: \"saving the world\",\n    label: \"saving the world\",\n    value: 15,\n    color: \"#edc3d8\",\n  },\n  {\n    id: \"superhero\",\n    label: \"superhero\",\n    value: 15,\n    color: \"#d1c9e9\",\n  },\n  {\n    id: \"based on comic\",\n    label: \"based on comic\",\n    value: 14,\n    color: \"#dce4f2\",\n  },\n  {\n    id: \"new york city\",\n    label: \"new york city\",\n    value: 13,\n    color: \"#feddc8\",\n  },\n];\n\nexport const tvGenres = [\n  {\n    id: \"드라마\",\n    label: \"드라마\",\n    value: 82,\n    color: \"#ebc8f6\",\n  },\n  {\n    id: \"Sci-Fi & Fantasy\",\n    label: \"Sci-Fi & Fantasy\",\n    value: 58,\n    color: \"#edc3d8\",\n  },\n  {\n    id: \"범죄\",\n    label: \"범죄\",\n    value: 57,\n    color: \"#d1c9e9\",\n  },\n  {\n    id: \"미스터리\",\n    label: \"미스터리\",\n    value: 57,\n    color: \"#dce4f2\",\n  },\n  {\n    id: \"Action & Adventure\",\n    label: \"Action & Adventure\",\n    value: 56,\n    color: \"#feddc8\",\n  },\n];\n\nexport const tvCountry = [\n  {\n    id: \"US\",\n    label: \"US\",\n    value: 52,\n    color: \"#ebc8f6\",\n  },\n  {\n    id: \"JP\",\n    label: \"JP\",\n    value: 30,\n    color: \"#edc3d8\",\n  },\n  {\n    id: \"CA\",\n    label: \"CA\",\n    value: 6,\n    color: \"#d1c9e9\",\n  },\n  {\n    id: \"KR\",\n    label: \"KR\",\n    value: 6,\n    color: \"#dce4f2\",\n  },\n  {\n    id: \"GB\",\n    label: \"GB\",\n    value: 5,\n    color: \"#feddc8\",\n  },\n];\n\nexport const tvKeyword = [\n  {\n    id: \"anime\",\n    label: \"anime\",\n    value: 29,\n    color: \"#ebc8f6\",\n  },\n  {\n    id: \"paris, france\",\n    label: \"paris, france\",\n    value: 24,\n    color: \"#edc3d8\",\n  },\n  {\n    id: \"based on manga\",\n    label: \"based on manga\",\n    value: 19,\n    color: \"#d1c9e9\",\n  },\n  {\n    id: \"assassin\",\n    label: \"assassin\",\n    value: 18,\n    color: \"#dce4f2\",\n  },\n  {\n    id: \"shounen\",\n    label: \"shounen\",\n    value: 17,\n    color: \"#feddc8\",\n  },\n];\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport axios from \"axios\";\nimport { PredictionOrder } from \"./Prediction\";\nimport Tab from \"./Tab\";\nimport MyResponsivePie from \"./GraphComponent\";\nimport {\n  movieGenres,\n  movieCountry,\n  movieKeyword,\n  tvGenres,\n  tvCountry,\n  tvKeyword,\n} from \"./GraphData\";\nimport { imgUrl } from \"../apis/api\";\n\nconst Main = ({ popularList, predictableList, onPopular, onPredictable }) => {\n  const [currTab, setCurrTab] = useState(\"MOVIE\");\n  const [height, setHeight] = useState(994);\n  const predictRef = useRef(null);\n  // state를 redux로 관리하여 사용자 겸험을 상승\n  //FIXME: just for demonstration(서버와 미연결로 인하여 현재 임시 데이터 api를 불러와서 렌더링 중)\n  const requestContents = (subject) => {\n    const hitContents = async () => {\n      try {\n        const response = await axios.get(`/api/${subject}/hit`);\n        onPredictable(response.data);\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n    hitContents();\n  };\n\n  const subject = currTab.toLowerCase();\n\n  const topRated = async () => {\n    try {\n      const response = await axios.get(\"/api/top_rated\");\n      onPopular(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    topRated();\n  }, []);\n\n  useEffect(() => {\n    requestContents(subject);\n  }, [currTab]);\n\n  useEffect(() => {\n    if (predictRef.current) {\n      setHeight(predictRef.current.clientHeight);\n      console.log(height)\n    }\n  });\n\n  const handleClickTab = (tab) => {\n    setCurrTab(tab);\n  };\n\n  // FIXME: 필요없는 부분은 배포전 재확인 후 삭제 예정\n  const settings = {\n    dots: true, // 슬라이드 밑에 점 보이게\n    infinite: true, // 무한으로 반복\n    speed: 500,\n    autoplay: true,\n    autoplaySpeed: 2000, // 넘어가는 속도\n    slidesToShow: 5, // 4장씩 보이게\n    // slidesToScroll: 5, // 1장씩 뒤로 넘어가게\n    centerMode: true,\n    centerPadding: \"0px\", // 0px 하면 슬라이드 끝쪽 이미지가 안잘림\n  };\n  const distribution = [\"장르\", \"키워드\", \"국가\"];\n  const order = [\"1.\", \"2.\", \"3.\", \"4.\", \"5.\"];\n  return (\n    <div className=\"main\">\n      <TopTen className=\"topTen\">\n        <TopTenTitle className=\"topTenTitle\">인기 컨텐츠 Top 10</TopTenTitle>\n        {!popularList ? (\n          <img\n            src=\"https://blog.kakaocdn.net/dn/cmseNl/btrhhTwEA0r/TNAoELO6JmK3rhVeNfGYy0/img.gif\"\n            alt=\"\"\n            style={{\n              width: \"20%\",\n              marginTop: \"130px\",\n            }}\n          />\n        ) : (\n          <StyledSlider {...settings}>\n            {popularList.map((content) => (\n              <CardBox key={content.id}>\n                <CardImg\n                  alt=\"인기 컨텐츠\"\n                  src={`${imgUrl}${content.poster_path}`}\n                />\n                <CardText>{content.title}</CardText>\n              </CardBox>\n            ))}\n          </StyledSlider>\n        )}\n      </TopTen>\n      <BackgroundSquare height={height} />\n      <PredictionContainer className=\"prediction\" ref={predictRef}>\n        <Tab currTab={currTab} onClick={handleClickTab} />\n        <PredictionTitle className=\"predictionTiTle\">{`${currTab} 흥행 예측 분석 top 5`}</PredictionTitle>\n        <PredictChart className=\"predictChart\">\n          {currTab === \"MOVIE\" ? (\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"1.4fr 1.5fr 1fr\",\n              }}\n            >\n              {[movieGenres, movieKeyword, movieCountry].map((data, idx) => (\n                <PredictSeparate key={idx}>\n                  <PredictChartTitle className=\"predictChartTitle\">\n                    {distribution[idx]}\n                  </PredictChartTitle>\n                  <MyResponsivePie data={data} key={idx} />\n                </PredictSeparate>\n              ))}\n            </div>\n          ) : (\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"1.2fr 1.5fr 1fr\",\n              }}\n              className=\"predictContainer\"\n            >\n              {[tvGenres, tvKeyword, tvCountry].map((data, idx) => (\n                <PredictSeparate key={idx}>\n                  <PredictChartTitle className=\"predictChartTitle\">\n                    {distribution[idx]}\n                  </PredictChartTitle>\n                  <MyResponsivePie data={data} key={idx} />\n                </PredictSeparate>\n              ))}\n            </div>\n          )}\n        </PredictChart>\n        <Recommendation className=\"recommendation\">\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"1.8fr 4fr\",\n              padding: \"0px 30px\",\n              marginBottom: \"30px\",\n              fontSize: \"25px\",\n            }}\n            className=\"subtitles\"\n          >\n            <h1>흥행 예측 top 5</h1>\n            <h1>코로나 이전 유사 컨텐츠</h1>\n          </div>\n          {!predictableList ? (\n            <img\n              src=\"https://blog.kakaocdn.net/dn/cmseNl/btrhhTwEA0r/TNAoELO6JmK3rhVeNfGYy0/img.gif\"\n              alt=\"\"\n              style={{\n                width: \"20%\",\n                marginTop: \"130px\",\n              }}\n            />\n          ) : (\n            predictableList.map((List, idx) => (\n              <div\n                key={idx}\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  // padding: \"30px\",\n                  borderBottom: \"solid 2px #a6a3f1\",\n                  marginBottom: \"60px\",\n                }}\n              >\n                <h1\n                  style={{\n                    fontSize: \"30px\",\n                    color: \"#8e8be9\",\n                    transform: \"translateY(150px) translateX(10px)\",\n                  }}\n                >\n                  {order[idx]}\n                </h1>\n                <PredictionOrder List={List} currTab={currTab.toLowerCase()} />\n              </div>\n            ))\n          )}\n        </Recommendation>\n      </PredictionContainer>\n    </div>\n  );\n};\n\nexport default Main;\n\nconst BackgroundSquare = ({ height }) => {\n  const style = {\n    marginTop: \"30px\",\n    position: \"absolute\",\n    zIndex: \"1\",\n    width: \"1300px\",\n    height: `${height+20}px`,\n    backgroundColor: \"#ffffff8d\",\n    borderRadius: \"25px\",\n    boxShadow: \"0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n  };\n  return <div style={style}></div>;\n};\n\n//TODO: styled-components 파일은 가급적 한 파일에서 관리\nconst TopTen = styled.div`\n  margin-top: 30px;\n  height: 540px;\n  background-color: #ffffff8d;\n  border-radius: 25px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\n\nconst TopTenTitle = styled.h1`\n  text-align: left;\n  margin-left: 80px;\n  position: relative;\n  top: 50px;\n  font-size: 35px;\n`;\n\nconst StyledSlider = styled(Slider)`\n  .slick-list {\n    max-width: 1200px;\n    top: 95px;\n    margin: 0 auto;\n    height: 350px;\n  }\n\n  .slick-slide div {\n    display: flex;\n    justify-content: center;\n  }\n\n  .slick-dots {\n    bottom: -110px;\n  }\n\n  .slick-arrow {\n    top: 200px;\n    margin-left: 3rem;\n    margin-right: 3rem;\n    color: black;\n  }\n\n  .slick-prev::before {\n    color: black;\n  }\n\n  .slick-next::before {\n    color: black;\n  }\n`;\n\nconst CardBox = styled.div`\n  /* cursor: pointer; */\n  width: 200px;\n`;\n\nconst CardImg = styled.img`\n  width: 180px;\n  height: 250px;\n  text-align: center;\n  margin: 0 auto;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  border-radius: 10px;\n\n  @media (max-width: 850px) {\n    width: 100px;\n    height: 150px;\n  }\n`;\n\nconst CardText = styled.p`\n  margin: 0 auto;\n  padding: 10px;\n  font-family: \"NotoSansKR\";\n  font-weight: bold;\n  font-size: 15px;\n  align-items: center;\n  text-align: center;\n  height: 80px;\n  width: 150px;\n  color: black;\n\n  @media (max-width: 850px) {\n    font-size: 10px;\n    width: 100px;\n    height: 60px;\n  }\n`;\n\nconst PredictionContainer = styled.div`\n  height: 100%;\n  padding-bottom: 30px;\n  margin: 50px 40px;\n  margin-bottom: 0px;\n  z-index: 2;\n  position: relative;\n`;\n\nconst PredictionTitle = styled.h1`\n  margin-top: 2.5rem;\n  margin-bottom: 2rem;\n  font-size: 35px;\n`;\n\nconst PredictChart = styled.div`\n  background: #ffffff9b;\n  border-radius: 15px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\n\nconst PredictSeparate = styled.div`\n  height: 230px;\n  margin: 2rem 0;\n`;\n\nconst PredictChartTitle = styled.div`\n  font-size: 28px;\n  margin-bottom: 1rem;\n`;\n\nconst Recommendation = styled.div`\n  justify-content: center;\n  margin-top: 30px;\n  background: #ffffff9b;\n  border-radius: 15px;\n  /* height: 2080px; */\n  margin-bottom: 40px;\n  padding: 0 30px;\n  padding-top: 35px;\n  padding-bottom: 1px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\n\nconst Subtitles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n`;\n\nconst Subtitle = styled.h1`\n  margin: 2rem auto;\n  font-size: 28px;\n\n  &.predictSubtitle {\n    margin-left: 200px;\n  }\n`;\n\nconst RecommendationList = styled.div``;\n\nconst Order = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin: 30px 0;\n  width: 100px;\n  font-size: 40px;\n`;\n\nconst Detail = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin: 30px 0;\n  width: 300px;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  margin: 30px 0;\n`;\n\nconst SimilarDetail = styled.div`\n  display: flex;\n`;\n","export const imgUrl = \"https://image.tmdb.org/t/p/original/\";","const POPULAR = \"popularity/POPULAR\";\nconst PREDICABLE = \"popularity/PREDICABLE\";\nconst SIMILAR = \"popularity/SIMILAR\";\n\nexport const popular = (popularList) => ({ type: POPULAR, popularList });\nexport const predictable = (predictableList) => ({\n  type: PREDICABLE,\n  predictableList,\n});\nexport const similar = (similarList) => ({ type: SIMILAR, similarList });\n\nconst initialState = {\n  popularList: \"\",\n  predictableList: \"\",\n  similarList: \"\",\n};\n\nfunction catchOn(state = initialState, action) {\n  switch (action.type) {\n    case POPULAR:\n      return {\n        ...state,\n        popularList: action.popularList,\n      };\n    case PREDICABLE:\n      return {\n        ...state,\n        predictableList: action.predictableList,\n      };\n    case SIMILAR:\n      return {\n        ...state,\n        similarList: action.similarList,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default catchOn;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Main from \"../components/Main\";\nimport { popular, predictable, similar } from \"../modules/popularity\";\n\nconst MainContainer = ({\n  popularList,\n  predictableList,\n  similarList,\n  popular,\n  predictable,\n  similar,\n}) => {\n  return (\n    <Main\n      popularList={popularList}\n      predictableList={predictableList}\n      similarList={similarList}\n      onPopular={popular}\n      onPredictable={predictable}\n      onSimilar={similar}\n    />\n  );\n};\n\nexport default connect(\n  ({ catchOn }) => ({\n    popularList: catchOn.popularList,\n    predictableList: catchOn.predictableList,\n    similarList: catchOn.similarList,\n  }),\n  { popular, predictable, similar }\n)(MainContainer);\n","import axios from \"axios\";\nimport React from \"react\";\nimport tokenHeader from \"../authorization/tokenHeader\";\nimport { useHistory } from \"react-router\";\n\nexport default function Modal({setQuit}) {\n  const history = useHistory();\n  const onConfirm = (message = null, onConfirm, onCancel) => {\n    if (!onConfirm || typeof onConfirm !== \"function\") {\n      return;\n    }\n    if (onCancel && typeof onCancel !== \"function\") {\n      return;\n    }\n\n    const confirmAction = () => {\n      if (window.confirm(message)) {\n        onConfirm();\n      } else {\n        onCancel();\n      }\n    };\n\n    return confirmAction;\n  };\n\n  const onQuit = () => {\n    setTimeout(() => {\n      window.localStorage.clear();\n      history.push(\"/\");\n    }, 5000);\n  };\n  const deleteConfirm = async () => {\n    try {\n      const response = await axios.delete(`/api/mypage/delete/user`, {\n        headers: tokenHeader(),\n      });\n      if (response.data.result === \"success\") {\n        setQuit(true);\n        onQuit();\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n  const cancelConfirm = () => console.log(\"취소했습니다.\");\n  const confirmDelete = onConfirm(\n    \"정말로 P🥔TCHA를 떠나시겠습니까?\",\n    deleteConfirm,\n    cancelConfirm\n  );\n\n  return (\n    <div className=\"App\">\n      <button onClick={confirmDelete}>회원 탈퇴</button>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { BsPencilFill, BsSaveFill } from \"react-icons/bs\";\nimport { FaSearchPlus } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport tokenHeader from \"../authorization/tokenHeader\";\nimport { ContentsCard } from \"./Prediction\";\nimport Modal  from \"./Modal\";\nimport Banner from \"react-js-banner\";\n\n// TODO: 컴포넌트 세분화 작업 필요\n// 나의 프로필(프로필 이미지, 닉네임 정보가 담기는) 컴포넌트\nexport const Profile = ({\n  user,\n  onSubmit,\n  onToggle,\n  setOnToggle,\n  onChange,\n}) => {\n  return (\n    <div>\n      <p>\n        {/* 사진과 input을 일치시킴 */}\n        <label className=\"input-file-button\" htmlFor=\"input-file\">\n          <Img src={user.image.file} alt=\"#\" disabled={onToggle} />\n        </label>\n        <input\n          id=\"input-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onChange}\n          disabled={onToggle}\n          style={{ display: \"none\" }}\n        />\n      </p>\n      {onToggle ? (\n        <button\n          title=\"수정\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => setOnToggle(!onToggle)}\n        >\n          <BsPencilFill />\n        </button>\n      ) : (\n        <button\n          title=\"저장\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            setOnToggle(!onToggle);\n            onSubmit();\n          }}\n        >\n          <BsSaveFill />\n        </button>\n      )}\n      <h3>{user.nickname}</h3>\n    </div>\n  );\n};\n\n// 친구 추가 후 친구목록에 나타는 친구의 프로필\nexport const FriendProfile = ({ friend }) => {\n  return (\n    <ProfileContainer>\n      <div>\n        <Img\n          src={`${process.env.REACT_APP_BASE_URL}/${friend.photolink}`}\n          alt=\"\"\n        />\n        <h1>{friend.nickname}</h1>\n      </div>\n    </ProfileContainer>\n  );\n};\n\nconst MyPage = ({\n  user,\n  friendList,\n  onUserProfile,\n  onRequestFriends,\n}) => {\n  const [onToggle, setOnToggle] = useState(true);\n  const [friendNickname, setFriendNickname] = useState(\"\");\n  const [existence, setExistence] = useState(false);\n  const [friend, setFriend] = useState(\"\");\n  const [quit, setQuit] = useState(false);\n  const [recommendList, setRecommendList] = useState(\"\");\n\n  // 마이페이지 접속 시 프로필을 받아옴\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`/api/mypage`, {\n        headers: tokenHeader(),\n      });\n      onUserProfile({\n        ...user,\n        nickname: response.data.nickname,\n        image: {\n          file: `${process.env.REACT_APP_BASE_URL}/${response.data.photolink}`,\n        },\n      });\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  // 마이페이지 접속 시 나의 친구 목록을 불러옴\n  const fetchFriend = async () => {\n    try {\n      const response = await axios.get(`/api/mypage/list/friend`, {\n        headers: tokenHeader(),\n      });\n      onRequestFriends(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  const recommend = async () => {\n    try {\n      const response = await axios.get(`/api/mypage/recommend`, {\n        headers: tokenHeader(),\n      });\n      setRecommendList(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    fetchFriend();\n    recommend();\n  }, []);\n\n  // 변경할 이미지를 선택할 경우 임시 이미지 URL을 생성하여, 일시적으로 프로필 사진을 변경함\n  const onChange = (event) => {\n    onUserProfile({\n      ...user,\n      image: {\n        file: URL.createObjectURL(event.target.files[0]),\n        files: event.target.files,\n      },\n    });\n  };\n\n  // 저장버튼을 누를 경우 변경된 이미지를 서버에 전달\n  const onSubmit = async () => {\n    if (user.image.files) {\n      const imageFile = Array.from(user.image.files);\n      const formData = new FormData();\n      formData.append(\"file\", imageFile[0]);\n      try {\n        const response = await axios.patch(\n          `/api/mypage/modify/photo`,\n          formData,\n          {\n            headers: tokenHeader(),\n          }\n        );\n        console.log(response.data);\n      } catch (error) {\n        console.log(error.response);\n      }\n    }\n  };\n\n  // 닉네임을 입력창에 입력 후 서버에 전달 -> 친구의 프로필을 띄움\n  const onNicknameSubmit = async (e) => {\n    e.preventDefault();\n    setExistence(true);\n    const body = {\n      nickname: friendNickname,\n    };\n    if (friendNickname) {\n      try {\n        const response = await axios.post(`/api/mypage/find/friend`, body, {\n          headers: tokenHeader(),\n        });\n        console.log(\"response\", response);\n        if (response.data.result !== \"fail\") {\n          setExistence(false);\n          setFriend(response.data);\n          console.log(friend);\n        } else {\n          setExistence(true);\n          setFriend(\"\");\n          setTimeout(() => {\n            setExistence(false);\n          }, 2000);\n        }\n      } catch (error) {\n        console.log(error.response);\n        setExistence(true);\n        setFriend(\"\");\n        setTimeout(() => {\n          setExistence(false);\n        }, 2000);\n      }\n    }\n  };\n\n  // 친구를 찾고 OK 버튼을 누를 경우 검색한 친구를 친구 목록에 추가하기 위해 서버에 요청 후 변경된 리스트를 받아옴\n  const handleOk = async () => {\n    const body = {\n      nickname: friend.nickname,\n    };\n    try {\n      const response = await axios.post(`/api/mypage/add/friend`, body, {\n        headers: tokenHeader(),\n      });\n      console.log(response.data);\n      if (response.data.result === \"fail\") {\n        alert(\"본인 또는 이미 추가된 친구입니다.\");\n      }\n      const fetchData = await axios.get(`/api/mypage/list/friend`, {\n        headers: tokenHeader(),\n      });\n      onRequestFriends(fetchData.data);\n      setFriendNickname(\"\");\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return (\n    <div>\n      <Banner\n        showBanner={quit}\n        css={{\n          backgroundColor: \"#0080ff\",\n          fontSize: 20,\n          fontWeight: \"lighter\",\n          color: \"white\",\n          margin: \"1rem auto\",\n          borderRadius: \"25px\",\n        }}\n        title=\"회원 탈퇴를 성공하셨습니다. 안녕히 가세요.\"\n      />\n\n      <Container>\n        <ProfileContainer>\n          <Profile\n            user={user}\n            onSubmit={onSubmit}\n            onToggle={onToggle}\n            setOnToggle={setOnToggle}\n            onChange={onChange}\n          />\n        </ProfileContainer>\n        <div style={{ height: \"350px\", background: \"blue\", maxWidth: \"800px\" }}>\n          <h1>추천 영화</h1>\n          {!recommendList ? (\n            <span>분석할 감자 바구니가 없습니다.</span>\n          ) : (\n            recommendList.map((recommend, idx) => (\n              <Link\n                to={`/detail/${recommend.category}/${recommend.id}/${recommend.title}`}\n              >\n                <ContentsCard contents={recommend} key={idx} />\n              </Link>\n            ))\n          )}\n        </div>\n        <div style={{ width: \"250px\", background: \"pink\", margin: \"0 auto\" }}>\n          <Modal setQuit={setQuit} />\n        </div>\n        <div style={{ background: \"red\", maxWidth: \"800px\" }}>\n          <div>\n            <form onSubmit={onNicknameSubmit}>\n              <span>친구 추가</span>\n              <input\n                type=\"text\"\n                value={friendNickname}\n                onChange={(e) => setFriendNickname(e.target.value)}\n                placeholder=\"친구의 닉네임을 입력해주세요.\"\n              />\n              <button type=\"submit\" shape=\"circle\">\n                <FaSearchPlus />\n              </button>\n            </form>\n            {existence && <h1>친구의 닉네임을 확인해주세요.</h1>}\n            {!friend ? (\n              <span></span>\n            ) : (\n              <ProfileContainer>\n                <div>\n                  <Img\n                    src={`${process.env.REACT_APP_BASE_URL}/${friend.photolink}`}\n                    alt=\"\"\n                  />\n                  <h1>{friend.nickname}</h1>\n                  <button onClick={handleOk}>추가하기</button>\n                </div>\n              </ProfileContainer>\n            )}\n          </div>\n          <div>친구 목록</div>\n          <div style={{ background: \"green\", height: \"250px\" }}>\n            {!friendList ? (\n              <div></div>\n            ) : (\n              friendList.map((friend) => (\n                <Link to={`/potato-basket/${friend.nickname}`}>\n                  <FriendProfile key={friend.nickname} friend={friend} />\n                </Link>\n              ))\n            )}\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default MyPage;\n\n//TODO: styled-components 파일은 가급적 한 파일에서 관리\nconst Container = styled.div`\n  margin: 30px auto;\n  max-width: 1400px;\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 20px;\n  justify-self: center;\n`;\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  background-color: white;\n  margin: 0 auto;\n  width: 250px;\n  height: 350px;\n  border-radius: 15px;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n`;\n\nconst Img = styled.img`\n  width: 125px;\n  height: 125px;\n  border-radius: 50%;\n  border: none;\n  background-color: #f2f2f2;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n  ${(props) => {\n    if (!props.disabled) {\n      return css`\n        cursor: pointer;\n      `;\n    }\n  }}\n`;\n","const USERPROFILE = \"mypage/USERPROFILE\";\nconst REQUESTFRIENDS = \"mypage/REQUESTFRIENDS\";\nconst RECOMMEND = \"mypage/RECOMMEND\";\n\n//FIXME: just for demonstration(임시 default image url)\nconst defaultImage =\n  \"https://kdt-gitlab.elice.io/002-part3-ottservice/team5/sample-project/-/raw/develop/backend/static/image/default.png\";\n\nexport const userProfile = (user) => ({\n  type: USERPROFILE,\n  user,\n});\n\nexport const requestFriends = (friendList) => ({\n  type: REQUESTFRIENDS,\n  friendList,\n});\n\nexport const recommend = (recommendList) => ({\n  type: RECOMMEND,\n  recommendList,\n});\n\nconst initialState = {\n  user: {\n    nickname: \"nickname\",\n    image: {\n      file: defaultImage,\n      files: \"\",\n    },\n  },\n  friendList: \"\",\n  recommendList: \"\",\n};\n\nfunction inform(state = initialState, action) {\n  switch (action.type) {\n    case USERPROFILE:\n      return {\n        ...state,\n        user: action.user,\n      };\n    case REQUESTFRIENDS:\n      return {\n        ...state,\n        friendList: action.friendList,\n      };\n    case RECOMMEND:\n      return {\n        ...state,\n        recommendList: action.recommendList\n      }\n    default:\n      return state;\n  }\n}\n\nexport default inform;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport MyPage from \"../components/MyPage\";\nimport {\n  userProfile,\n  requestFriends,\n  recommend,\n} from \"../modules/mypage\";\n\nconst MyPageContainer = ({\n  user,\n  friendList,\n  recommendList,\n  userProfile,\n  requestFriends,\n  recommend,\n}) => {\n  return (\n    <MyPage\n      user={user}\n      friendList={friendList}\n      recommendList={recommendList}\n      onUserProfile={userProfile}\n      onRequestFriends={requestFriends}\n      onRecommend={recommend}\n    />\n  );\n};\n\nexport default connect(\n  ({ inform }) => ({\n    user: inform.user,\n    friendList: inform.friendList,\n    recommendList: inform.recommendList,\n  }),\n  { userProfile, requestFriends, recommend }\n)(MyPageContainer);\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem(\"access_token\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction PublicRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !localStorage.getItem(\"access_token\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/main\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PublicRoute;\n","import { Menu, MenuButton, MenuList, MenuItem, Button } from \"@chakra-ui/core\";\nimport styled from \"styled-components\";\nimport React from \"react\";\n\nconst Filtering = ({ onClick, filtering }) => {\n  const array = [\n    \"인기도 높은 순\",\n    \"인기도 낮은 순\",\n    \"최신 작품 순\",\n    \"오래된 작품 순\",\n    \"제목 순\",\n  ];\n  return (\n    <div>\n      <Subtitle>정렬조건</Subtitle>\n      <Menu>\n        <MenuButton\n          as={Button}\n          rightIcon=\"chevron-down\"\n          style={menuButtonStyle}\n        >\n          {filtering}\n        </MenuButton>\n        <MenuList style={menuListStyle}>\n          {array.map((element) => (\n            <MenuItem\n              onClick={onClick}\n              value={element}\n              key={element}\n              style={menuItemStyle}\n            >\n              {element}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    </div>\n  );\n};\n\nexport default Filtering;\n\nconst Subtitle = styled.h2`\n  font-size: 25px;\n  margin-top: 30px;\n  left: 0px;\n`;\n\nconst menuButtonStyle = {\n  background: \"white\",\n  width: \"165px\",\n  height: \"25px\",\n  borderRadius: \"5px\",\n  margin: \"10px\",\n  fontFamily: \"NotoSansKR\",\n  fontWeight: \"bold\",\n  fontSize: \"15px\",\n};\n\nconst menuListStyle = {\n  borderRadius: \"3px\",\n  margin: \"5px\",\n};\n\nconst menuItemStyle = {\n  margin: \"5px\",\n  backgroundColor: \"transparent\",\n  border: \"none\",\n  fontFamily: \"NotoSansKR\",\n  fontWeight: \"bold\",\n  fontSize: \"15px\",\n  display: \"table\",\n  margin: \"auto\",\n};\n","import { Menu, MenuButton, MenuList, MenuItem, Button } from \"@chakra-ui/core\";\nimport styled from \"styled-components\";\nimport React from \"react\";\n\nconst Categorizing = ({\n  onClick,\n  categorizing,\n  MovieCategoriesList,\n  TVCategoriesList,\n  category,\n}) => {\n  return (\n    <div>\n      <Subtitle>카테고리</Subtitle>\n      <Menu>\n        <MenuButton\n          as={Button}\n          rightIcon=\"chevron-down\"\n          style={menuButtonStyle}\n          className=\"menuButton\"\n        >\n          {categorizing}\n        </MenuButton>\n        {category === \"movie\" ? (\n          <MenuList style={menuListStyle}>\n            {!MovieCategoriesList ? (\n              <div>Loading ...</div>\n            ) : (\n              MovieCategoriesList.map((category) => (\n                <MenuItem\n                  onClick={onClick}\n                  value={category}\n                  key={category}\n                  style={menuItemStyle}\n                >\n                  {category}\n                </MenuItem>\n              ))\n            )}\n          </MenuList>\n        ) : (\n          <MenuList style={menuListStyle}>\n            {!TVCategoriesList ? (\n              <div>Loading ...</div>\n            ) : (\n              TVCategoriesList.map((category) => (\n                <MenuItem\n                  onClick={onClick}\n                  value={category}\n                  key={category}\n                  style={menuItemStyle}\n                >\n                  {category}\n                </MenuItem>\n              ))\n            )}\n          </MenuList>\n        )}\n      </Menu>\n    </div>\n  );\n};\n\nexport default Categorizing;\n\nconst Subtitle = styled.h2`\n  font-size: 25px;\n  margin-top: 15px;\n  left: 0px;\n`;\n\nconst menuButtonStyle = {\n  background: \"white\",\n  width: \"165px\",\n  height: \"25px\",\n  borderRadius: \"5px\",\n  margin: \"10px\",\n  fontFamily: \"NotoSansKR\",\n  fontWeight: \"bold\",\n  fontSize: \"15px\",\n  padding: \"0px\",\n};\n\nconst menuListStyle = {\n  borderRadius: \"3px\",\n  margin: \"5px\",\n};\n\nconst menuItemStyle = {\n  margin: \"5px\",\n  backgroundColor: \"transparent\",\n  border: \"none\",\n  fontFamily: \"NotoSansKR\",\n  fontWeight: \"bold\",\n  fontSize: \"15px\",\n  display: \"table\",\n  margin: \"auto\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport Filtering from \"./Filtering\";\nimport { ThemeProvider } from \"@chakra-ui/core\";\nimport Categorizing from \"./Categorizing\";\nimport axios from \"axios\";\nimport { ContentsCard } from \"./Prediction\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nconst ContentsCategory = () => {\n  const [contentsList, setContentsList] = useState(\"\");\n  const [filtering, setFiltering] = useState(\"선택하기\");\n  const [categorizing, setCategorizing] = useState(\"선택하기\");\n  // url에서 category(movie, tv) 분류\n  const category = window.location.href.split(\"/\")[4];\n  console.log(category);\n\n  const MovieCategoriesList = [\n    \"음악\",\n    \"역사\",\n    \"코미디\",\n    \"모험\",\n    \"판타지\",\n    \"가족\",\n    \"공포\",\n    \"서부\",\n    \"전쟁\",\n    \"TV 영화\",\n    \"애니메이션\",\n    \"로맨스\",\n    \"액션\",\n    \"드라마\",\n    \"범죄\",\n    \"스릴러\",\n    \"SF\",\n    \"미스터리\",\n  ];\n  const TVCategoriesList = [\n    \"War & Politics\",\n    \"Reality\",\n    \"Action & Adventure\",\n    \"애니메이션\",\n    \"범죄\",\n    \"Talk\",\n    \"Kids\",\n    \"서부\",\n    \"코미디\",\n    \"드라마\",\n    \"Soap\",\n    \"News\",\n    \"Sci-Fi & Fantasy\",\n    \"가족\",\n    \"미스터리\",\n  ];\n  // 최초 렌더링 시 인기도 높은 순서 데이터 요청\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`/api/${category}/list`);\n      setContentsList(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  // 정렬 및 장렬 분류에 따른 데이터 요청\n  const fetchFilter = async (subject, data) => {\n    const body = { sort_criteria: data };\n    try {\n      const response = await axios.post(\n        `/api/${category}/list/${subject}`,\n        body\n      );\n      setContentsList(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [category]);\n\n  // 영화 카테고리와 tv 카테고리에 따른 분류 함수\n  const chooseCategoryData = (array, data) => {\n    if (array.includes(data)) {\n      setFiltering(\"선택하기\");\n      setCategorizing(data);\n      fetchFilter(\"filter\", data);\n    } else {\n      setFiltering(data);\n      setCategorizing(\"선택하기\");\n      fetchFilter(\"sorted\", data);\n    }\n  };\n  const onClick = (e) => {\n    const data = e.target.value;\n    setFiltering(\"선택하기\");\n    setCategorizing(\"선택하기\");\n    if (category === \"movie\") {\n      const array = MovieCategoriesList;\n      chooseCategoryData(array, data);\n    } else {\n      const array = TVCategoriesList;\n      chooseCategoryData(array, data);\n    }\n  };\n\n  return (\n    <CategoryContainer className=\"CategoryContainer\">\n      <FilterBackgroundSquare />\n      <Filter>\n        <ThemeProvider>\n          <div style={{ paddingRight: \"25px\" }}>\n            <Filtering\n              onClick={onClick}\n              filtering={filtering}\n              category={category}\n            />\n            <Categorizing\n              onClick={onClick}\n              categorizing={categorizing}\n              MovieCategoriesList={MovieCategoriesList}\n              TVCategoriesList={TVCategoriesList}\n              category={category}\n            />\n          </div>\n        </ThemeProvider>\n      </Filter>\n      <ListBackgroundSquare />\n      <div\n        style={{\n          padding: \"20px\",\n        }}\n      >\n        <Scrollbars\n          style={{\n            position: \"relative\",\n            height: \"1140px\",\n          }}\n          className=\"Scrollbar\"\n          renderThumbVertical={({ style, ...props }) => (\n            <div\n              {...props}\n              style={{\n                ...style,\n                zIndex: \"5\",\n                backgroundColor: \"#c9b3f3dd\",\n                borderRadius: \"inherit\",\n              }}\n            />\n          )}\n        >\n          <FilteredList>\n            {!contentsList ? (\n              <div>Loading ...</div>\n            ) : (\n              contentsList.map((contents) => (\n                <Link to={`/detail/${category}/${contents.id}/${contents.title}`}>\n                  <ContentsCard contents={contents} key={contents.id} />\n                </Link>\n              ))\n            )}\n          </FilteredList>\n        </Scrollbars>\n      </div>\n    </CategoryContainer>\n  );\n};\n\nexport default ContentsCategory;\n\nconst FilterBackgroundSquare = () => {\n  const style = {\n    position: \"absolute\",\n    zIndex: \"1\",\n    width: \"200px\",\n    height: \"205px\",\n    backgroundColor: \"#ffffff8d\",\n    borderRadius: \"25px\",\n    boxShadow: \"0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n  };\n  return <div style={style}></div>;\n};\n\nconst ListBackgroundSquare = () => {\n  const style = {\n    position: \"absolute\",\n    zIndex: \"1\",\n    width: \"990px\",\n    height: \"1200px\",\n    backgroundColor: \"#ffffff8d\",\n    borderRadius: \"25px\",\n    boxShadow: \"0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n    transform: \"translateX(230px)\",\n  };\n  return <div style={style}></div>;\n};\n\nconst CategoryContainer = styled.div`\n  height: 100vh;\n  background: #ffffff8d;\n  border-radius: 25px;\n  padding: 30px 40px;\n  display: grid;\n  grid-template-columns: 230px 990px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\n\nconst Filter = styled.div`\n  position: relative;\n  z-index: 2;\n`;\n\nconst FilteredList = styled.div`\n  position: relative;\n  z-index: 2;\n  display: grid;\n  padding: 10px 10px;\n  padding-right: 15px;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  /* overflow-y: auto; */\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ContentsCard } from \"./Prediction\";\n\nconst Search = ({ windowHeight }) => {\n  const [searchList, setSearchList] = useState(\"\");\n\n  const params = useParams();\n  const fetchData = async () => {\n    if (params.query === \" \") {\n      return;\n    }\n    const body = {\n      search_word: params.query,\n    };\n    try {\n      const response = await axios.post(`/api/search`, body);\n      console.log(response.data);\n      setSearchList(response.data);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [params]);\n\n  return (\n    <div\n      style={{\n        minHeight: `${windowHeight - 320}px`,\n      }}\n    >\n      <div>\n        <div>'{params.query}' 검색 결과</div>\n        <div>MOVIE Contents</div>\n        {searchList?.movie?.map((movie) => (\n          <Link to={`/detail/movie/${movie.id}/${movie.title}`}>\n            <ContentsCard contents={movie} key={movie.id} category=\"movie\" />\n          </Link>\n        ))}\n      </div>\n\n      <div>\n        <div>TV Contents</div>\n        {searchList?.tv?.map((tv) => (\n          <Link to={`/detail/tv/${tv.id}/${tv.title}`}>\n            <ContentsCard contents={tv} key={tv.id} category=\"tv\" />\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ContentsDetail from \"./components/ContentsDetail\";\nimport NonSignIn from \"./components/NonSignIn\";\nimport Signin from \"./components/Signin\";\nimport Signup from \"./components/Signup\";\nimport Navigation from \"./components/Navigation\";\nimport Footer from \"./components/Footer\";\nimport PotatoesInBasket from \"./containers/PotatoBasketContainer\";\nimport MainContainer from \"./containers/MainContainer\";\nimport MyPageContainer from \"./containers/MyPageContainer\";\nimport PrivateRoute from \"./helpers/PrivateRoute\";\nimport PublicRoute from \"./helpers/PublicRoute\";\nimport ContentsCategory from \"./components/ContentsCategory\";\nimport Banner from \"react-js-banner\";\nimport { useHistory } from \"react-router-dom\";\nimport Search from \"./components/Search\";\nimport styled from \"styled-components\";\n\nconst App = () => {\n  const [loggedOut, setLoggedOut] = useState(false);\n  const windowSize = useWindowSize();\n\n  const history = useHistory();\n\n  const onFail = () => {\n    setLoggedOut(true);\n    setTimeout(() => setLoggedOut(false), 2000);\n  };\n\n  const logout = () => {\n    onFail();\n    setTimeout(() => {\n      window.localStorage.clear();\n      history.push(\"/\");\n    }, 2000);\n  };\n\n  return (\n    <div\n      className=\"centerPosition\"\n      style={{\n        textAlign: \"center\",\n        backgroundImage:\n          \"linear-gradient(-30deg, #ebbfe0, #c1d3ff, #d9ddff, #efd6ff)\",\n      }}\n    >\n      <div style={{ minHeight: `${windowSize.height}px` }}>\n        <div className=\"totalStyledDiv\" style={totalStyled}>\n          <div className=\"navigation\" style={stickyNavigation}>\n            <Navigation logout={logout} />\n            <Banner\n              showBanner={loggedOut}\n              css={{\n                backgroundColor: \"#0080ff\",\n                fontSize: 20,\n                fontWeight: \"lighter\",\n                color: \"white\",\n                margin: \"1rem auto\",\n                borderRadius: \"25px\",\n              }}\n              title=\"로그아웃 되었습니다.\"\n            />\n          </div>\n          <div>\n            <Switch>\n              <PublicRoute exact path=\"/\" component={NonSignIn} />\n              <PublicRoute path=\"/signin\" component={Signin} />\n              <PublicRoute path=\"/signin\">\n                <Signin windowHeight={windowSize.height} />\n              </PublicRoute>\n              <PublicRoute path=\"/signup\" component={Signup} />\n              <PublicRoute path=\"/signup\">\n                <Signup windowHeight={windowSize.height} />\n              </PublicRoute>\n              <PrivateRoute path=\"/main\" component={MainContainer} />\n              <PrivateRoute\n                path=\"/detail/:category/:id/:title\"\n                component={ContentsDetail}\n              />\n              <PrivateRoute path=\"/list/movie\" component={ContentsCategory} />\n              <PrivateRoute path=\"/list/tv\" component={ContentsCategory} />\n              <Route path=\"/potato-basket/:nickname\">\n                <PotatoesInBasket />\n              </Route>\n              <PrivateRoute path=\"/mypage\" component={MyPageContainer} />\n              <PrivateRoute path=\"/mypage\">\n                <div style={{ minHeight: `${windowSize.height - 350}px` }}>\n                  <MyPageContainer />\n                </div>\n              </PrivateRoute>\n              <PrivateRoute path=\"/search/:query\" component={Search} />\n              <PrivateRoute path=\"/search/:query\">\n                <Search windowHeight={windowSize.height} />\n              </PrivateRoute>\n              <Route\n                render={() => (\n                  <NonPage\n                    style={{ minHeight: `${windowSize.height - 350}px` }}\n                  >\n                    <NonPageComment>존재하지 않는 페이지입니다.</NonPageComment>\n                  </NonPage>\n                )}\n              />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n\nconst totalStyled = {\n  fontFamily: \"NotoSansKR\",\n  fontWeight: \"bold\",\n  fontStyle: \"normal\",\n  textDecoration: \"none\",\n  width: \"1300px\",\n  display: \"inline-block\",\n};\n\nconst stickyNavigation = {\n  position: \"sticky\",\n  top: 0,\n  zIndex: 10,\n};\n\nconst NonPage = styled.div`\n  background-color: #ffffff8d;\n  margin-top: 30px;\n  border-radius: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NonPageComment = styled.h2`\n  font-size: 50px;\n`;\n","import { combineReducers } from \"redux\";\nimport catchOn from \"./popularity\";\nimport catchPotato from \"./potatoes\";\nimport inform from \"./mypage\";\n\nconst rootReducer = combineReducers({\n  catchOn,\n  catchPotato,\n  inform,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./modules\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport axios from \"axios\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\naxios.defaults.baseURL = \"http://localhost:5000\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}